"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","122171","1205"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","111576","111576"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","42112","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","42112","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","38730","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","34128","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","34089","34089"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","27196","20"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","26924","26924"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","23835","8"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","23707","23707"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","17447","17447"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","14884","14884"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","14863","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","14863","14863"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","4358","4358"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","2543","2543"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","2305","2305"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","1904","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","1766","1766"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","1381","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","1148","1148"
"java.lang.String.valueOf(Object) String.java","1110","1110"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","1037","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","863","863"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","862","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","808","808"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","807","12"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","792","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","758","19"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","694","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","684","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","419","419"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","289","289"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","279","8"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","276","276"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","148","148"
"java.lang.StringBuilder.toString() StringBuilder.java","111","111"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","95","95"
"java.util.HashMap.get(Object) HashMap.java","51","51"
"java.util.HashMap.put(Object, Object) HashMap.java","47","47"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","39","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","39","0"
"java.util.Collections.sort(List) Collections.java","35","35"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers() VerifierOrchestrator.java","31","0"
"eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger) PairWiseDifferenceVerifier.java","31","31"
"eu.prismacloud.primitives.zkpgs.store.URN.getIndex() URN.java","27","27"
"java.util.ArrayList$Itr.next() ArrayList.java","19","19"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","17","17"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseProvers(List) ProverOrchestrator.java","15","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executeCompoundPreChallengePhase() PairWiseDifferenceProver.java","15","15"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind() GSSignature.java","15","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int) BaseIteratorImpl.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.createQuery(Vector) VerifierOrchestrator.java","4","4"
