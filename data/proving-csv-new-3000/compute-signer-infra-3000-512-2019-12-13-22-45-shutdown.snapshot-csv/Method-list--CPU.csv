"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","15067","1186"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","3823","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","3823","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","3433","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","2567","2567"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","2053","2053"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","1974","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","1950","12"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","1872","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","1872","1872"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","1872","1872"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","1722","1722"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","1689","1689"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","1563","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","1561","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","1524","1524"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","1411","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","1363","1363"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","1305","1305"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","1038","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","871","871"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","842","12"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","802","12"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","662","662"
"java.util.regex.Pattern$Loop.match(Matcher, int, CharSequence) Pattern.java","464","9975"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","389","389"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","355","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","292","292"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","271","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","260","0"
"java.lang.String.valueOf(Object) String.java","255","255"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","227","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","215","215"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","195","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","184","252"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","115","115"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","88","88"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","87","87"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","52","52"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","35","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","35","0"
"java.util.Collections.sort(List) Collections.java","31","31"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","16","16"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.getBaseIndex() BaseRepresentation.java","12","12"
"java.lang.StringBuilder.append(int) StringBuilder.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URN.getIndex() URN.java","11","11"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.<init>(ExtendedPublicKey, IMessageGateway) ProverOrchestrator.java","8","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getVertexById(String) GraphRepresentation.java","8","8"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int) ExtendedPublicKey.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.verifier.GSVerifier.computeNonce() GSVerifier.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.createQuery(Vector) VerifierOrchestrator.java","4","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.<init>(GSCommitment, int, SignerPublicKey, ProofStore) CommitmentProver.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int) BaseIteratorImpl.java","3","3"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.initPairWiseDifferenceProvers() ProverOrchestrator.java","3","0"
