"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","10763","1986"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","5609","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","4717","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","3194","3194"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","1940","1940"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","1352","0"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","1334","1334"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","1195","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","1144","1144"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","816","816"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","799","799"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","783","783"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","681","681"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","618","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","547","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","431","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","411","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","403","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","403","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","399","8"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","368","368"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","314","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","314","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","313","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","306","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","295","295"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","272","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","272","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","250","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","250","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","243","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","219","23"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","212","0"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","189","189"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","150","165"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","99","99"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","39","39"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","35","35"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","32","32"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","23","23"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","23","23"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","16","16"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","15","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","15","15"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeVPrimePrimeRandomness() SignerOrchestrator.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","11","11"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","8","8"
"java.util.ArrayList$Itr.next() ArrayList.java","7","7"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","7","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.extractMessageElements(GSMessage, SignerOrchestrator$SignatureData) SignerOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger) GSSignatureValidator.java","7","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature() RecipientOrchestrator.java","4","0"
