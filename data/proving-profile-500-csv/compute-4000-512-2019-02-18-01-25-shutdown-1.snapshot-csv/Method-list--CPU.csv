"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","3840","32"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1308","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1308","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","1300","1300"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","1096","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","1096","4"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","1080","68"
"java.lang.String.matches(String) String.java","968","968"
"java.io.ObjectInputStream.readObject() ObjectInputStream.java","836","1556"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","828","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","752","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","732","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","732","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String) URN.java","724","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","524","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","520","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","520","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase() PossessionProver.java","520","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","496","8"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","432","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ() PossessionProver.java","388","28"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","384","4"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","372","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","372","8"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","372","0"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","360","0"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger) PossessionVerifier.java","360","8"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","352","352"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","340","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","324","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger) AbstractCommitmentVerifier.java","316","12"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","308","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","284","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","268","0"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","252","4"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness() AbstractCommitmentProver.java","240","20"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","220","32"
"java.lang.Object.clone() Object.java (native)","208","208"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","196","8"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","196","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","172","28"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","148","232"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","136","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.createWitnessRandomness() PossessionProver.java","132","0"
"java.lang.Class.getDeclaredField(String) Class.java","100","100"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","96","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","80","0"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.checkLengths() PossessionVerifier.java","80","44"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int) GSUtils.java","76","24"
"java.util.regex.Matcher.matches() Matcher.java","76","76"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","72","72"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","68","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","68","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List) ExtendedPublicKey.java","68","40"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","64","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeResponses(BigInteger) AbstractCommitmentProver.java","64","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","64","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumberMinusPlus(int) CryptoUtilsFacade.java","64","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.randomMinusPlusNumber(int) GSUtils.java","64","16"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","60","60"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getTildeRandomnessURN() CommitmentProver.java","56","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","56","0"
"java.security.MessageDigest.update(byte[]) MessageDigest.java","48","48"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.clone() BaseRepresentation.java","44","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","44","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","44","0"
"java.lang.String.valueOf(Object) String.java","40","28"
"eu.prismacloud.primitives.zkpgs.verifier.CommitmentVerifier.getHatRandomnessURN() CommitmentVerifier.java","36","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getHatRandomnessURN() CommitmentProver.java","32","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","32","0"
"java.lang.Class.getInterfaces() Class.java","32","32"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List) BaseRepresentation.java","28","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getPrototypeEdgeBase(int) ExtendedPublicKey.java","28","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitnessRandomness() AbstractCommitmentProver.java","28","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","24","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","24","0"
"eu.prismacloud.primitives.zkpgs.verifier.CommitmentVerifier.getHatMURN() CommitmentVerifier.java","24","0"
"eu.prismacloud.primitives.zkpgs.verifier.CommitmentVerifier.getURNbyBaseType(BaseRepresentation, URNClass) CommitmentVerifier.java","24","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getTildeMURN() CommitmentProver.java","20","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getURNbyBaseType(BaseRepresentation, URNClass) CommitmentProver.java","20","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.add(URN, Object) ProofStore.java","20","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.save(URN, Object) ProofStore.java","20","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","16","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.filter() BaseIteratorImpl.java","16","16"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","16","0"
"java.lang.Object.getClass() Object.java (native)","16","16"
"java.util.HashSet.add(Object) HashSet.java","16","16"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int) ExtendedPublicKey.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","12","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.toString() QRElement.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","12","0"
"java.util.Collections.sort(List) Collections.java","12","12"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.<init>(ExtendedPublicKey, IMessageGateway) ProverOrchestrator.java","8","0"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.BaseCollectionImpl.<init>() BaseCollectionImpl.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int) BaseIteratorImpl.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","8","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.checkLengths() AbstractCommitmentVerifier.java","8","0"
"eu.prismacloud.primitives.zkpgs.verifier.GSVerifier.computeNonce() GSVerifier.java","8","0"
"java.lang.String.getBytes(Charset) String.java","8","8"
"java.math.BigInteger.multiply(BigInteger) BigInteger.java","8","8"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getPrototypeVertexBase(int) ExtendedPublicKey.java","4","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerPublicKey.getKeyGenParameters() SignerPublicKey.java","4","4"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.initPairWiseDifferenceProvers() ProverOrchestrator.java","4","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executePrecomputation() PairWiseDifferenceProver.java","4","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.storeCoprimality() PairWiseDifferenceProver.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","4","4"
"java.io.ObjectInputStream.close() ObjectInputStream.java","4","4"
"java.math.BigInteger.pow(int) BigInteger.java","4","4"
"java.util.HashSet.<init>(int) HashSet.java","4","4"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","4","4"
