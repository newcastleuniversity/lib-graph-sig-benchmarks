"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","8814","18"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","6395","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","6276","6276"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5167","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5167","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","4950","20"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1445","104"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1417","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1417","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1099","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1047","8"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","963","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","959","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","804","804"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","755","7"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","743","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","739","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","731","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","731","731"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","683","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","667","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","655","43"
"java.lang.String.matches(String) String.java","587","587"
"java.util.regex.Matcher.matches() Matcher.java","423","423"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","415","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","415","8"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","407","407"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","371","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","357","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","301","401"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","265","265"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","199","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","171","171"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","115","115"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","111","111"
"java.util.HashMap.put(Object, Object) HashMap.java","107","107"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","91","91"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","80","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","71","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","71","0"
"java.lang.Object.clone() Object.java (native)","67","67"
"java.math.BigInteger.add(BigInteger) BigInteger.java","56","56"
"java.lang.Class.getDeclaredField(String) Class.java","52","52"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","44","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","36","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isEnumerable(URNType) URNType.java","24","24"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","15","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","15","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","12","12"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","12","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","12","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","12","12"
"java.lang.reflect.Field.get(Object) Field.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","11","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.<init>() GSUtils.java","3","0"
"java.security.SecureRandom.<init>() SecureRandom.java","3","3"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","3","3"
