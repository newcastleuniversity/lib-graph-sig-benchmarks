"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","8836","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","6464","6464"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","6431","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5214","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5214","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","4970","88"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1461","12"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1457","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1457","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1140","8"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1056","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","961","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","940","940"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","915","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","795","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","795","795"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","713","8"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","705","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","685","36"
"java.lang.String.matches(String) String.java","617","617"
"java.util.regex.Matcher.matches() Matcher.java","407","407"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","368","368"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","339","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","339","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","317","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","311","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","286","286"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","237","237"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","183","183"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","115","115"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","111","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","111","0"
"java.lang.Class.getDeclaredField(String) Class.java","103","103"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","83","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","79","79"
"java.util.HashMap.put(Object, Object) HashMap.java","40","32"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","32","32"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","32","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","28","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","23","0"
"java.lang.StringBuilder.append(String) StringBuilder.java","23","23"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","12","12"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","12","12"
"java.lang.Object.getClass() Object.java (native)","11","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","11","3"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.createExtendedKeyPair() ExtendedKeyPair.java","11","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.<init>(SignerPublicKey, Map, IGraphEncoding, GraphEncodingParameters) ExtendedPublicKey.java","11","0"
"java.lang.String.length() String.java","8","8"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","8","8"
"java.lang.StringBuilder.toString() StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","7"
"java.lang.Class.getInterfaces() Class.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.<clinit>() EEAlgorithm.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","4","0"
"java.util.logging.Logger.getLogger(String) Logger.java","4","4"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","3","3"
