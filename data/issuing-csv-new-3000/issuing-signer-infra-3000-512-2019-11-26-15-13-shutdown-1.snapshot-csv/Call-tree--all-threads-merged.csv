"Call Tree","Time (ms)","Level"
"<All threads>","7857","1"
"<...> java.lang.Thread.run()","7410","2"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","3734","3"
"SignerOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","3123","4"
"SignerOrchestrator.java:364 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","1890","5"
"SignerOrchestrator.java:360 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","1038","5"
"SignerOrchestrator.java:362 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","195","5"
"SignerOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","355","4"
"SignerOrchestrator.java:442 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","175","5"
"SignerOrchestrator.java:523 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","91","6"
"SignerOrchestrator.java:521 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","67","6"
"SignerOrchestrator.java:536 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","6"
"SignerOrchestrator.java:444 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","167","5"
"SignerOrchestrator.java:193 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","167","6"
"SignerOrchestrator.java:453 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","7","5"
"GSSignature.java:176","7","6"
"SignerOrchestrator.java:448 <...> java.lang.ClassLoader.loadClass(String)","3","5"
"SignerOrchestrator.java:309 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","135","4"
"SignerOrchestrator.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","131","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","99","6"
"SigningQProverOrchestrator.java:114 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","99","7"
"SigningQProverOrchestrator.java:90 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","32","6"
"SignerOrchestrator.java:321 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.executePreChallengePhase()","3","5"
"SigningQProverOrchestrator.java:76 <...> eu.prismacloud.primitives.zkpgs.prover.SigningQCorrectnessProver.executePreChallengePhase()","3","6"
"SignerOrchestrator.java:294 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","107","4"
"SignerOrchestrator.java:349 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","99","5"
"SignerOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","75","6"
"SignerOrchestrator.java:565 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","75","7"
"SignerOrchestrator.java:375 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","23","6"
"SignerOrchestrator.java:347 <...> eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","7","5"
"SignerOrchestrator.java:298 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection()","8","4"
"SignerOrchestrator.java:290 <...> java.lang.ClassLoader.loadClass(String)","3","4"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","1251","3"
"RecipientOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","1251","4"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","369","3"
"RecipientOrchestrator.java:205 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","105","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","101","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","101","6"
"GSSignatureValidator.java:79 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","74","7"
"GSSignatureValidator.java:78 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","27","7"
"GSSignatureValidator.java:103 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger)","3","5"
"GSSignatureValidator.java:45 <...> java.math.BigInteger.isProbablePrime(int)","3","6"
"RecipientOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","103","4"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","59","5"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","16","5"
"GSSignature.java:132 eu.prismacloud.primitives.zkpgs.BaseRepresentation.getExponent()","11","5"
"GSSignature.java:132","8","5"
"GSSignature.java:130 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","7","5"
"RecipientOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","95","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","95","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","67","6"
"SigningQVerifierOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","67","7"
"SigningQVerifierOrchestrator.java:104 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","28","6"
"RecipientOrchestrator.java:241 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","44","4"
"RecipientOrchestrator.java:239 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","11","4"
"RecipientOrchestrator.java:213 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.checkLengths()","7","4"
"SigningQVerifierOrchestrator.java:97 <...> eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.checkLengths()","7","5"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","267","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","243","4"
"RecipientOrchestrator.java:251 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","171","5"
"RecipientOrchestrator.java:258 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","171","6"
"RecipientOrchestrator.java:252 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","71","5"
"RecipientOrchestrator.java:139 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","15","4"
"RecipientOrchestrator.java:155 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger)","7","4"
"<16 calls> IssuingBenchmark.java:151 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.<init>(String, ExtendedKeyPair, IMessageGateway)","8","3"
"SignerOrchestrator.java:261 <...> java.lang.ClassLoader.loadClass(String)","8","4"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","400","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","30","2"
"java.io.ObjectInputStream.readOrdinaryObject(boolean)","15","2"
