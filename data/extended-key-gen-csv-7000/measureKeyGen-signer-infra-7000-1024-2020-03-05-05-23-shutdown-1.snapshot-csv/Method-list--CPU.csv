"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","30840","8"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","27824","27824"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","26531","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","25737","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","25737","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","20916","28"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","5614","8"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","2871","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","2743","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","2743","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","2743","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","2695","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","2695","2695"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1413","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1413","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1011","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","853","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","627","627"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","590","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","479","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","451","36"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","393","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","387","12"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","373","8"
"java.util.regex.Matcher.matches() Matcher.java","369","369"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","365","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","355","355"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","353","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","303","386"
"java.lang.String.matches(String) String.java","291","291"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","284","284"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","227","227"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","160","160"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","112","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","112","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","112","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","112","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","112","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","109","109"
"java.util.HashMap.put(Object, Object) HashMap.java","87","87"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","68","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","55","55"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","48","0"
"java.lang.Class.getDeclaredField(String) Class.java","43","43"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","31","19"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","30","30"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","28","28"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","27","0"
"java.lang.Object.getClass() Object.java (native)","22","22"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","16","16"
"java.lang.String.equals(Object) String.java","15","15"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_E() GraphEncodingParameters.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.isEnumerable(URNType) URNType.java","12","12"
"java.lang.Class.getInterfaces() Class.java","12","0"
"java.lang.StringBuilder.toString() StringBuilder.java","11","11"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","4","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","4","4"
