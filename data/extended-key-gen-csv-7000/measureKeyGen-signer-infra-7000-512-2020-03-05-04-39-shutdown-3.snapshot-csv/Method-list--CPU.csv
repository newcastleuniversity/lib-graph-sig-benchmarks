"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","7575","14"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5584","5584"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5010","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4269","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4269","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","3886","48"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1350","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1350","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","1171","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1124","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","993","31"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","955","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","951","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","951","951"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","947","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","947","3"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","822","822"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","601","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","529","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","363","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","363","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","358","358"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","357","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","347","12"
"java.lang.String.matches(String) String.java","303","303"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","268","315"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","246","246"
"java.util.regex.Matcher.matches() Matcher.java","221","221"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","216","216"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","213","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","213","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","207","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","201","35"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","187","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","187","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","187","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","187","187"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","115","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","111","111"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","95","11"
"java.lang.Class.getDeclaredField(String) Class.java","47","47"
"java.util.HashMap.put(Object, Object) HashMap.java","28","16"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","27","0"
"java.lang.reflect.Field.get(Object) Field.java","24","24"
"java.lang.StringBuilder.toString() StringBuilder.java","19","19"
"java.lang.Object.getClass() Object.java (native)","19","19"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","17","17"
"java.lang.StringBuilder.append(String) StringBuilder.java","15","15"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","15","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","15","15"
"java.lang.String.equals(Object) String.java","15","15"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","11","0"
"java.lang.String.hashCode() String.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.<init>() GSUtils.java","8","0"
"java.security.SecureRandom.<init>() SecureRandom.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.<clinit>() EEAlgorithm.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"java.util.logging.Logger.getLogger(String) Logger.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","3","3"
