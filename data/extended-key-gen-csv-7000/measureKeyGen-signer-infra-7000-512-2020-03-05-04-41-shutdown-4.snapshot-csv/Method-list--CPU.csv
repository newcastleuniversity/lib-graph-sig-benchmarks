"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","7211","25"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5089","5089"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5000","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4152","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4152","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","3908","28"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1310","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1310","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1091","12"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","949","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","911","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","843","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","723","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","719","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","715","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","715","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","707","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","707","707"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","697","697"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","519","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","519","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","499","15"
"java.lang.String.matches(String) String.java","463","463"
"java.util.regex.Matcher.matches() Matcher.java","415","415"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","391","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","391","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","367","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","353","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","336","336"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","257","257"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","257","362"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","135","135"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","127","127"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","123","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","123","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","119","0"
"java.lang.Class.getDeclaredField(String) Class.java","98","98"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","95","95"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","67","4"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","48","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","48","0"
"java.util.HashMap.put(Object, Object) HashMap.java","35","27"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","23","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","20","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","13","13"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","12","4"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","11","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_V() GraphEncodingParameters.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","8","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.getKeyGenParameters() KeyGenParameters.java","7","7"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","7"
"java.lang.Class.getInterfaces() Class.java","7","7"
"java.lang.Enum.equals(Object) Enum.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","3","0"
"java.lang.Object.equals(Object) Object.java","3","3"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.<init>(SignerKeyPair, GraphEncodingParameters, KeyGenParameters) ExtendedKeyPair.java","3","0"
