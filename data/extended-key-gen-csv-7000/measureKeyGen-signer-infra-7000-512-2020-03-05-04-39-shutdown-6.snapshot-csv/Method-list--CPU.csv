"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","7080","10"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5031","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5021","5021"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","3971","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","3971","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","3863","44"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1359","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1359","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1167","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1046","15"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","972","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","868","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","830","830"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","651","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","639","4"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","639","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","639","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","639","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","635","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","627","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","627","627"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","615","20"
"java.lang.String.matches(String) String.java","563","563"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","403","403"
"java.util.regex.Matcher.matches() Matcher.java","352","352"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","332","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","328","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","304","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","292","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","237","237"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","237","252"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","147","147"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","115","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","99","99"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","91","0"
"java.lang.Class.getDeclaredField(String) Class.java","83","83"
"java.util.HashMap.put(Object, Object) HashMap.java","71","71"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","67","67"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","36","0"
"java.lang.StringBuilder.append(String) StringBuilder.java","31","31"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","27","27"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","23","23"
"java.lang.StringBuilder.toString() StringBuilder.java","19","19"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","19","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","15","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","15","15"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","12","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","12","12"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","11","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","8","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","8","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.GroupElement.<init>() GroupElement.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notNull(Object, Object) Assert.java","4","4"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","3","3"
