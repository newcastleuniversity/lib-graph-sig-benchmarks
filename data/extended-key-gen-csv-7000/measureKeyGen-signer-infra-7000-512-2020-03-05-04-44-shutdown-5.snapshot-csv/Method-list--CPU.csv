"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","7004","11"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","4977","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","4728","4728"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","3951","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","3951","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","3821","76"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1447","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1447","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1155","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1080","4"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1068","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","806","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","769","769"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","713","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","713","20"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","701","0"
"java.lang.String.matches(String) String.java","638","638"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","543","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","507","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","507","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","507","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","507","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","507","507"
"java.util.regex.Matcher.matches() Matcher.java","395","395"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","389","389"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","359","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","355","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","355","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","323","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","264","264"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","203","203"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","115","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","95","95"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","66","66"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","63","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","55","55"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","31","0"
"java.lang.Class.getDeclaredField(String) Class.java","27","27"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","24","24"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"java.lang.Object.getClass() Object.java (native)","19","19"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","19","7"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","19","0"
"java.lang.reflect.Field.get(Object) Field.java","16","16"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","15","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","15","15"
"java.lang.StringBuilder.append(int) StringBuilder.java","11","11"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","8","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","8","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getNameSpaceComponentClass(URNType) URNType.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","7","7"
"java.util.HashMap.put(Object, Object) HashMap.java","7","0"
"java.lang.StringBuilder.<init>() StringBuilder.java","4","4"
"org.openjdk.jmh.runner.ForkedMain$HangupThread.run() ForkedMain.java","3","3"
