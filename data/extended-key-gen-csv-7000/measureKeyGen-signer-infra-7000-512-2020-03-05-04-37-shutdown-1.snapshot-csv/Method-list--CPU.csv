"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","8273","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5642","5642"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","4949","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4138","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4138","11"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","3850","15"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","1939","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","1860","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","1860","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","1860","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","1844","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","1844","1844"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1364","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1364","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1099","36"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","967","20"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","823","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","695","695"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","667","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","407","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","403","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","403","3"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","396","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","395","0"
"java.util.regex.Matcher.matches() Matcher.java","383","383"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","335","24"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","324","444"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","311","0"
"java.lang.String.matches(String) String.java","307","307"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","280","280"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","263","263"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","183","183"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","111","20"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","107","107"
"java.lang.Class.getDeclaredField(String) Class.java","99","99"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","71","11"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","67","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","67","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","63","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","59","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","59","59"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","55","55"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","51","51"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","47","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","34","34"
"java.lang.StringBuilder.append(String) StringBuilder.java","30","30"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","23","0"
"java.util.HashMap.put(Object, Object) HashMap.java","21","21"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notNull(Object, Object) Assert.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","7","0"
"java.lang.String.isEmpty() String.java","7","7"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","7","0"
"java.lang.reflect.Field.get(Object) Field.java","4","4"
"java.util.regex.Pattern.<clinit>() Pattern.java","3","3"
"java.lang.Object.getClass() Object.java (native)","3","3"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.<init>(SignerKeyPair, GraphEncodingParameters, KeyGenParameters) ExtendedKeyPair.java","3","0"
