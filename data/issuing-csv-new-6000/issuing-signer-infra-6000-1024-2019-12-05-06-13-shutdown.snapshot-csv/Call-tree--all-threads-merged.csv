"Call Tree","Time (ms)","Level"
"<All threads>","16327","1"
"<...> java.lang.Thread.run()","15912","2"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","8629","3"
"SignerOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","7319","4"
"SignerOrchestrator.java:364 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","5424","5"
"SignerOrchestrator.java:360 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","1624","5"
"SignerOrchestrator.java:362 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","243","5"
"SignerOrchestrator.java:360 <...> java.lang.ClassLoader.loadClass(String)","23","5"
"SignerOrchestrator.java:364 <...> java.lang.ClassLoader.loadClass(String)","3","5"
"SignerOrchestrator.java:294 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","451","4"
"SignerOrchestrator.java:349 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","439","5"
"SignerOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","351","6"
"SignerOrchestrator.java:565 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","351","7"
"SignerOrchestrator.java:375 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","87","6"
"SignerOrchestrator.java:347 <...> eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","12","5"
"SignerOrchestrator.java:309 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","447","4"
"SignerOrchestrator.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","447","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","359","6"
"SigningQProverOrchestrator.java:114 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","359","7"
"SigningQProverOrchestrator.java:90 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","87","6"
"SignerOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","410","4"
"SignerOrchestrator.java:442 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","322","5"
"SignerOrchestrator.java:523 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","190","6"
"SignerOrchestrator.java:521 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","79","6"
"SignerOrchestrator.java:517 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","12","6"
"SignerOrchestrator.java:521 <...> java.util.HashMap.get(Object)","11","6"
"SignerOrchestrator.java:521 <...> java.math.BigInteger.multiply(BigInteger)","11","6"
"SignerOrchestrator.java:523 <...> java.util.HashMap.get(Object)","7","6"
"SignerOrchestrator.java:517 java.util.ArrayList$Itr.hasNext()","7","6"
"SignerOrchestrator.java:444 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","55","5"
"SignerOrchestrator.java:193 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","55","6"
"SignerOrchestrator.java:453 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","32","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","20","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","20","7"
"GSSignature.java:176 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","6"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","1969","3"
"RecipientOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","1969","4"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","1761","3"
"RecipientOrchestrator.java:205 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","635","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","627","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","627","6"
"GSSignatureValidator.java:79 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","543","7"
"GSSignatureValidator.java:78 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","72","7"
"GSSignatureValidator.java:86 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","7"
"GSSignatureValidator.java:103 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger)","8","5"
"GSSignatureValidator.java:45 <...> java.math.BigInteger.isProbablePrime(int)","8","6"
"RecipientOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","563","4"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","503","5"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","60","5"
"RecipientOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","410","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","406","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","311","6"
"SigningQVerifierOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","311","7"
"SigningQVerifierOrchestrator.java:104 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","94","6"
"SigningQVerifierOrchestrator.java:137 <...> eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger)","3","5"
"RecipientOrchestrator.java:241 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","143","4"
"RecipientOrchestrator.java:239","7","4"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","735","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","712","4"
"RecipientOrchestrator.java:251 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","579","5"
"RecipientOrchestrator.java:258 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","579","6"
"RecipientOrchestrator.java:252 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","133","5"
"RecipientOrchestrator.java:142 <...> eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.generatevPrime()","11","4"
"RecipientOrchestrator.java:145 <...> eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","11","4"
"<16 calls> IssuingBenchmark.java:156 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init()","7","3"
"RecipientOrchestrator.java:112 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.generateRecipientMSK()","7","4"
"RecipientOrchestrator.java:276 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","7","5"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","384","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","22","2"
"<...> java.math.BigInteger.modInverse(BigInteger)","7","2"
