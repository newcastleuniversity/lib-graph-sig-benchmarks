"Call Tree","Time (ms)","Level"
"eu.prismacloud.primitives.grs.bench.IssuingBenchmark.SerializeGSBenchmark.issuing-jmh-worker-1 Group: 'main' Native ID: 24258","15839","1"
"<...> java.lang.Thread.run()","15839","2"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","8490","3"
"SignerOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","7311","4"
"SignerOrchestrator.java:364 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","5404","5"
"SignerOrchestrator.java:360 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","1647","5"
"SignerOrchestrator.java:362 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","260","5"
"SignerOrchestrator.java:309 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","423","4"
"SignerOrchestrator.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","423","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","343","6"
"SigningQProverOrchestrator.java:114 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","343","7"
"SigningQProverOrchestrator.java:90 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","79","6"
"SignerOrchestrator.java:294 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","407","4"
"SignerOrchestrator.java:349 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","407","5"
"SignerOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","319","6"
"SignerOrchestrator.java:565 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","319","7"
"SignerOrchestrator.java:375 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","87","6"
"SignerOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","339","4"
"SignerOrchestrator.java:442 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","303","5"
"SignerOrchestrator.java:523 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","159","6"
"SignerOrchestrator.java:521 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","68","6"
"SignerOrchestrator.java:518","36","6"
"SignerOrchestrator.java:521 java.lang.Object.getClass()","12","6"
"SignerOrchestrator.java:517","12","6"
"SignerOrchestrator.java:521","7","6"
"SignerOrchestrator.java:521 java.math.BigInteger.add(BigInteger)","7","6"
"SignerOrchestrator.java:444 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","28","5"
"SignerOrchestrator.java:193 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","28","6"
"SignerOrchestrator.java:448 <...> java.lang.ClassLoader.loadClass(String)","3","5"
"SignerOrchestrator.java:453 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","3","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","3","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","3","7"
"SignerOrchestrator.java:298 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection()","8","4"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","1947","3"
"RecipientOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","1947","4"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","1831","3"
"RecipientOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","635","4"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","491","5"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","135","5"
"GSSignature.java:134 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","8","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","8","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","8","7"
"RecipientOrchestrator.java:205 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","599","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","599","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","599","6"
"GSSignatureValidator.java:79 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","435","7"
"GSSignatureValidator.java:78 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","140","7"
"GSSignatureValidator.java:86 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","7"
"GSSignatureValidator.java:79 eu.prismacloud.primitives.zkpgs.BaseRepresentation.getBase()","7","7"
"GSSignatureValidator.java:67 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","7","7"
"RecipientOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","407","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","407","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","324","6"
"SigningQVerifierOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","324","7"
"SigningQVerifierOrchestrator.java:104 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","83","6"
"RecipientOrchestrator.java:241 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","164","4"
"RecipientOrchestrator.java:239","11","4"
"RecipientOrchestrator.java:199 <...> java.lang.ClassLoader.loadClass(String)","8","4"
"RecipientOrchestrator.java:239 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","4","4"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","784","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","768","4"
"RecipientOrchestrator.java:251 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","622","5"
"RecipientOrchestrator.java:258 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","622","6"
"RecipientOrchestrator.java:252 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","145","5"
"RecipientOrchestrator.java:158 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature()","11","4"
"RecipientOrchestrator.java:299 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","11","5"
"RecipientOrchestrator.java:145 <...> eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","3","4"
"<16 calls> IssuingBenchmark.java:151 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.<init>(String, ExtendedKeyPair, IMessageGateway)","12","3"
"SignerOrchestrator.java:261 <...> java.lang.ClassLoader.loadClass(String)","12","4"
"main Group: 'main' Native ID: 24221","434","1"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","395","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","38","2"
