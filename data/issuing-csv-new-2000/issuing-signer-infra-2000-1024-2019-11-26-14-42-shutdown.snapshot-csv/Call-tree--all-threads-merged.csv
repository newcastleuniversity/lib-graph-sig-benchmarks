"Call Tree","Time (ms)","Level"
"<All threads>","6698","1"
"<...> java.lang.Thread.run()","6325","2"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","3012","3"
"SignerOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","2348","4"
"SignerOrchestrator.java:364 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","1317","5"
"SignerOrchestrator.java:360 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","918","5"
"SignerOrchestrator.java:362 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","111","5"
"SignerOrchestrator.java:294 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","228","4"
"SignerOrchestrator.java:349 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","217","5"
"SignerOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","189","6"
"SignerOrchestrator.java:565 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","189","7"
"SignerOrchestrator.java:375 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","28","6"
"SignerOrchestrator.java:347 <...> eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","11","5"
"SignerOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","211","4"
"SignerOrchestrator.java:442 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","107","5"
"SignerOrchestrator.java:523 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","76","6"
"SignerOrchestrator.java:521 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","19","6"
"SignerOrchestrator.java:517","11","6"
"SignerOrchestrator.java:444 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","103","5"
"SignerOrchestrator.java:193 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","84","6"
"SignerOrchestrator.java:193","19","6"
"SignerOrchestrator.java:309 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","207","4"
"SignerOrchestrator.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","183","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","155","6"
"SigningQProverOrchestrator.java:114 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","155","7"
"SigningQProverOrchestrator.java:90 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","28","6"
"SignerOrchestrator.java:321 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.executePreChallengePhase()","23","5"
"SigningQProverOrchestrator.java:76 <...> eu.prismacloud.primitives.zkpgs.prover.SigningQCorrectnessProver.executePreChallengePhase()","23","6"
"SignerOrchestrator.java:298 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection()","16","4"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","823","3"
"RecipientOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","823","4"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","679","3"
"RecipientOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","215","4"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","191","5"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","19","5"
"GSSignature.java:134 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","4","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","4","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","4","7"
"RecipientOrchestrator.java:205 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","215","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","215","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","215","6"
"GSSignatureValidator.java:79 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","159","7"
"GSSignatureValidator.java:78 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","47","7"
"GSSignatureValidator.java:67 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","7","7"
"RecipientOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","171","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","171","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","131","6"
"SigningQVerifierOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","131","7"
"SigningQVerifierOrchestrator.java:104 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","40","6"
"RecipientOrchestrator.java:241 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","63","4"
"RecipientOrchestrator.java:199 <...> java.lang.ClassLoader.loadClass(String)","12","4"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","435","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","363","4"
"RecipientOrchestrator.java:251 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","295","5"
"RecipientOrchestrator.java:258 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","295","6"
"RecipientOrchestrator.java:252 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","67","5"
"RecipientOrchestrator.java:155 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger)","27","4"
"RecipientOrchestrator.java:151 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","23","4"
"RecipientOrchestrator.java:145 <...> eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","15","4"
"RecipientOrchestrator.java:158 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature()","4","4"
"RecipientOrchestrator.java:296 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","4","5"
"<16 calls> IssuingBenchmark.java:156 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init()","12","3"
"RecipientOrchestrator.java:116 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","12","4"
"<16 calls> IssuingBenchmark.java:151 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.<init>(String, ExtendedKeyPair, IMessageGateway)","3","3"
"SignerOrchestrator.java:261 <...> java.lang.ClassLoader.loadClass(String)","3","4"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","328","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","36","2"
"<...> java.math.BigInteger.modInverse(BigInteger)","7","2"
