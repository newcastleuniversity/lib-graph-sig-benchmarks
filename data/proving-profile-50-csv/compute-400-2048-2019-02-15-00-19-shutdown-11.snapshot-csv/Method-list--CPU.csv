"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","3028","44"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2296","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2296","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","2296","2296"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","856","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","824","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","824","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","812","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","720","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","480","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger) AbstractCommitmentVerifier.java","472","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","472","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","452","12"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness() AbstractCommitmentProver.java","428","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","428","0"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","416","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","372","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","372","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase() PossessionProver.java","372","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ() PossessionProver.java","344","0"
"java.io.ObjectInputStream.readObject() ObjectInputStream.java","340","560"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","320","0"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger) PossessionVerifier.java","320","12"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","300","300"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","268","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","204","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","192","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","180","28"
"eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String) URN.java","144","0"
"java.lang.String.matches(String) String.java","124","124"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","104","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","92","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","92","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","92","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","72","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","60","0"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List) BaseRepresentation.java","52","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","52","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","52","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List) ExtendedPublicKey.java","52","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","52","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","52","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","52","0"
"java.lang.String.valueOf(Object) String.java","52","52"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","40","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","40","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","40","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int) GSUtils.java","40","20"
"java.lang.Object.clone() Object.java (native)","40","40"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","28","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.createWitnessRandomness() PossessionProver.java","28","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","28","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers() VerifierOrchestrator.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","24","0"
"eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger) PairWiseDifferenceVerifier.java","24","0"
"java.math.BigInteger.mod(BigInteger) BigInteger.java","24","24"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseProvers(List) ProverOrchestrator.java","20","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","20","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","20","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.computeWitness() PairWiseDifferenceProver.java","20","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executeCompoundPreChallengePhase() PairWiseDifferenceProver.java","20","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executePreChallengePhase() PairWiseDifferenceProver.java","20","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","20","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumberMinusPlus(int) CryptoUtilsFacade.java","20","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.randomMinusPlusNumber(int) GSUtils.java","20","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","20","20"
"java.security.MessageDigest.update(byte[]) MessageDigest.java","20","20"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","16","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","16","8"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.getBaseCollection() GSCommitment.java","12","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","12","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.<init>(GSCommitment, int, SignerPublicKey, ProofStore) AbstractCommitmentProver.java","12","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.<init>(GSCommitment, int, SignerPublicKey, ProofStore) CommitmentProver.java","12","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind() GSSignature.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URN.getIndex() URN.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URN.getSuffix() URN.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.BaseCollectionImpl.clone() BaseCollectionImpl.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.BaseCollectionImpl.clone() BaseCollectionImpl.java","12","0"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.checkLengths() PossessionVerifier.java","12","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","12","12"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeResponses(BigInteger) AbstractCommitmentProver.java","8","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","8","0"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getTildeRandomnessURN() CommitmentProver.java","8","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","8","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.filter() BaseIteratorImpl.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","8","0"
"eu.prismacloud.primitives.zkpgs.verifier.CommitmentVerifier.getHatRandomnessURN() CommitmentVerifier.java","8","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","8","8"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","8","8"
