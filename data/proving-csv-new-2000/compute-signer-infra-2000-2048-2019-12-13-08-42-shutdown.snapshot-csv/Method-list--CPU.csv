"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","83246","916"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","75719","75719"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","28550","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","28550","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","26121","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","23131","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","23064","23064"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","18336","27"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","18096","18096"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","16088","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","16024","16024"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","11886","11886"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","10181","10181"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","10004","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","10004","10004"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","1895","1895"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","1392","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1346","1346"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","1169","1169"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","1007","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","985","985"
"java.lang.String.valueOf(Object) String.java","885","885"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","834","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","679","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","678","678"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","654","52"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","617","617"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","601","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","559","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","548","13"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","489","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","386","386"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","231","231"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","217","217"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","179","11"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","150","198"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","88","88"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","63","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","63","0"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","43","43"
"java.lang.StringBuilder.append(int) StringBuilder.java","32","32"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers() VerifierOrchestrator.java","31","0"
"eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger) PairWiseDifferenceVerifier.java","31","31"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int) ExtendedPublicKey.java","27","27"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","23","23"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseProvers(List) ProverOrchestrator.java","19","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executeCompoundPreChallengePhase() PairWiseDifferenceProver.java","19","19"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.createQuery(Vector) VerifierOrchestrator.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","12","12"
"java.util.HashMap$HashIterator.hasNext() HashMap.java","11","11"
"java.util.HashMap.putAll(Map) HashMap.java","9","9"
"eu.prismacloud.primitives.zkpgs.util.BaseCollectionImpl.add(BaseRepresentation) BaseCollectionImpl.java","7","7"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind() GSSignature.java","7","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.initPairWiseDifferenceProvers() ProverOrchestrator.java","3","0"
