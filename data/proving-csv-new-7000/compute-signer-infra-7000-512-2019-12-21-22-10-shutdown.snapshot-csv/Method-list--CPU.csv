"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","32970","2266"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","9015","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","9015","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","7598","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","5327","5327"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","4712","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","4518","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","4301","4301"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","4299","4299"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","4295","4295"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","4172","4172"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","4124","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","4124","4124"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","3473","24"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","3221","3221"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","3077","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","2973","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","2929","2929"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","2842","2842"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","2279","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","1929","1929"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","1907","20"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","1890","35"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","1457","1457"
"java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence) Pattern.java","1385","34440"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","698","698"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","652","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","586","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","556","8"
"java.lang.String.valueOf(Object) String.java","519","519"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","518","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","399","399"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","371","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","359","359"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","180","184"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","179","179"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","163","163"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int) ExtendedPublicKey.java","92","92"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","91","91"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","37","37"
"java.util.Collections.sort(List) Collections.java","36","36"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","35","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","35","0"
"java.util.ArrayList$Itr.next() ArrayList.java","23","23"
"eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.<init>(GSCommitment, int, SignerPublicKey, ProofStore) CommitmentProver.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int) BaseIteratorImpl.java","11","11"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.initPairWiseDifferenceProvers() ProverOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executePrecomputation() PairWiseDifferenceProver.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URN.getIndex() URN.java","7","7"
"java.lang.StringBuilder.append(int) StringBuilder.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers() VerifierOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","4","4"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getVertexById(String) GraphRepresentation.java","4","4"
"org.openjdk.jmh.runner.ForkedMain$HangupThread.run() ForkedMain.java","3","3"
