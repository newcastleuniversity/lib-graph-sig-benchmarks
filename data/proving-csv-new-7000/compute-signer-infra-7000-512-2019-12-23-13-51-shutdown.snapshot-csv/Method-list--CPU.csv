"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","33425","2285"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification() VerifierOrchestrator.java","9117","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger) VerifierOrchestrator.java","9117","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase() ProverOrchestrator.java","7679","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","5419","5419"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers() VerifierOrchestrator.java","4755","27"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","4741","4741"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger) ProverOrchestrator.java","4596","11"
"eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger) PossessionVerifier.java","4350","4350"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","4249","4249"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ() ProverOrchestrator.java","4181","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase() PossessionProver.java","4181","4181"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","4087","4087"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers() ProverOrchestrator.java","3497","28"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","3141","3141"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String) ProverOrchestrator.java","3134","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init() ProverOrchestrator.java","2963","0"
"eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator) GSProver.java","2927","2927"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","2810","2810"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage() VerifierOrchestrator.java","2330","0"
"eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger) PossessionProver.java","1966","1966"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map) VerifierOrchestrator.java","1926","64"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature() ProverOrchestrator.java","1901","16"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey) GSCommitment.java","1488","1488"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","691","691"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge() ProverOrchestrator.java","669","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge() VerifierOrchestrator.java","629","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList() VerifierOrchestrator.java","553","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList() ProverOrchestrator.java","533","0"
"java.lang.String.valueOf(Object) String.java","500","500"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map) VerifierOrchestrator.java","403","52"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","387","387"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","379","379"
"java.lang.StringBuilder.append(String) StringBuilder.java","220","220"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","211","211"
"eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String) URN.java","199","199"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","116","168"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int) ExtendedPublicKey.java","100","100"
"java.util.HashMap.get(Object) HashMap.java","86","86"
"java.util.HashMap.put(Object, Object) HashMap.java","68","68"
"java.util.Collections.sort(List) Collections.java","51","51"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int) ExtendedPublicKey.java","51","51"
"java.lang.StringBuilder.append(int) StringBuilder.java","39","39"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments() ProverOrchestrator.java","35","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int) ProverOrchestrator.java","35","0"
"java.util.HashMap.putAll(Map) HashMap.java","24","24"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int) BaseIteratorImpl.java","15","15"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers() VerifierOrchestrator.java","12","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init() VerifierOrchestrator.java","11","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","9","9"
"eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.<init>(ExtendedPublicKey, IMessageGateway) ProverOrchestrator.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.GSLoggerConfiguration.<clinit>() GSLoggerConfiguration.java","8","8"
"java.util.ArrayList.add(Object) ArrayList.java","7","7"
"eu.prismacloud.primitives.zkpgs.verifier.GSVerifier.computeNonce() GSVerifier.java","7","7"
"org.openjdk.jmh.runner.ForkedMain.<clinit>() ForkedMain.java","6","6"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","4","4"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getVertexById(String) GraphRepresentation.java","3","3"
