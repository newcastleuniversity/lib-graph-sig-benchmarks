"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","6148","870"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","2455","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","1779","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1430","1430"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","1407","1407"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","1372","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","846","846"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","747","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","747","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","739","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","662","662"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","651","0"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","649","649"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","631","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","631","631"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","587","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","502","502"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","491","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","482","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","478","478"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","418","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","417","417"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","391","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","354","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","347","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","340","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","340","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","328","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","280","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","280","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","267","267"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","259","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","184","271"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","151","151"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","131","44"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","91","91"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE() SignerOrchestrator.java","68","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","68","68"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","63","0"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","59","59"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","51","51"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","44","44"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","29","29"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init() RecipientOrchestrator.java","19","0"
"eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger) SigningQCorrectnessVerifier.java","19","19"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","15","15"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeA(SignerOrchestrator$SignatureData) SignerOrchestrator.java","15","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","12","12"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifyAgainstHatQ() GSSignatureValidator.java","8","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature() RecipientOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse() QRElement.java","4","4"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","3","3"
