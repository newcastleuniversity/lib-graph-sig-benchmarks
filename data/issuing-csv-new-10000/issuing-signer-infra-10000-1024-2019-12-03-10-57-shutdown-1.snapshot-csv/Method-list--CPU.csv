"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","30015","4334"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","18425","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","16477","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","13766","13766"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","4545","4545"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","3274","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","2955","19"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","2367","2367"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","2306","2306"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1758","1758"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","1556","1556"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","1289","1289"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","1027","8"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","1015","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","1011","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","1011","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","1003","23"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","973","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","777","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","686","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","686","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","667","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","667","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","659","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","659","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","603","603"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","590","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","546","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","531","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","527","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","498","56"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","403","403"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","388","388"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","283","283"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","235","235"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","209","300"
"java.util.HashMap.get(Object) HashMap.java","161","161"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","160","160"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.getBaseType() BaseRepresentation.java","147","147"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","76","76"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE() SignerOrchestrator.java","68","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","68","68"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","36","0"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","30","30"
"java.math.BigInteger.multiply(BigInteger) BigInteger.java","20","20"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","19","19"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","11","11"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.generateRecipientMSK() RecipientOrchestrator.java","10","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init() RecipientOrchestrator.java","10","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","8","8"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifyAgainstHatQ() GSSignatureValidator.java","8","0"
"java.util.ArrayList$Itr.next() ArrayList.java","7","7"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection() GraphRepresentation.java","4","4"
