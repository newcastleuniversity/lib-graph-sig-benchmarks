"Call Tree","Time (ms)","Level"
"eu.prismacloud.primitives.grs.bench.IssuingBenchmark.SerializeGSBenchmark.issuing-jmh-worker-1 Group: 'main' Native ID: 23665","28273","1"
"<...> java.lang.Thread.run()","28273","2"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","17840","3"
"SignerOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","16672","4"
"SignerOrchestrator.java:364 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","13612","5"
"SignerOrchestrator.java:360 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","2632","5"
"SignerOrchestrator.java:362 <...> eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","427","5"
"SignerOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","571","4"
"SignerOrchestrator.java:442 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","443","5"
"SignerOrchestrator.java:523 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","223","6"
"SignerOrchestrator.java:521 <...> eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","157","6"
"SignerOrchestrator.java:523","12","6"
"SignerOrchestrator.java:523 <...> java.math.BigInteger.add(BigInteger)","12","6"
"SignerOrchestrator.java:523 java.lang.Object.getClass()","12","6"
"SignerOrchestrator.java:521 <...> java.util.HashMap.get(Object)","12","6"
"SignerOrchestrator.java:517 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator()","7","6"
"SignerOrchestrator.java:523 <...> java.util.HashMap.get(Object)","6","6"
"SignerOrchestrator.java:444 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","108","5"
"SignerOrchestrator.java:193 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","108","6"
"SignerOrchestrator.java:453 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","20","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","20","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","20","7"
"SignerOrchestrator.java:309 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","312","4"
"SignerOrchestrator.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","312","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","243","6"
"SigningQProverOrchestrator.java:114 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","243","7"
"SigningQProverOrchestrator.java:90 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","68","6"
"SignerOrchestrator.java:294 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","276","4"
"SignerOrchestrator.java:349 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","276","5"
"SignerOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","216","6"
"SignerOrchestrator.java:565 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","216","7"
"SignerOrchestrator.java:375 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","60","6"
"SignerOrchestrator.java:298 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection()","8","4"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","3917","3"
"RecipientOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","3917","4"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","1200","3"
"RecipientOrchestrator.java:205 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","343","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","343","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","343","6"
"GSSignatureValidator.java:79 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","259","7"
"GSSignatureValidator.java:78 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","51","7"
"GSSignatureValidator.java:79","20","7"
"GSSignatureValidator.java:67","7","7"
"GSSignatureValidator.java:68","4","7"
"RecipientOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","303","4"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","275","5"
"GSSignature.java:132 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","23","5"
"GSSignature.java:134 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","4","5"
"GSSignature.java:176 <...> eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","4","6"
"RecipientOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","288","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","288","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","208","6"
"SigningQVerifierOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","208","7"
"SigningQVerifierOrchestrator.java:104 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","80","6"
"RecipientOrchestrator.java:241 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","264","4"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","533","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","491","4"
"RecipientOrchestrator.java:251 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","371","5"
"RecipientOrchestrator.java:258 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","371","6"
"RecipientOrchestrator.java:252 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","119","5"
"RecipientOrchestrator.java:151 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","19","4"
"RecipientOrchestrator.java:155 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger)","12","4"
"RecipientOrchestrator.java:145 <...> eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","11","4"
"<16 calls> IssuingBenchmark.java:156 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init()","14","3"
"RecipientOrchestrator.java:116 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","10","4"
"RecipientOrchestrator.java:117 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","3","4"
"<16 calls> IssuingBenchmark.java:151 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.<init>(String, ExtendedKeyPair, IMessageGateway)","7","3"
"SignerOrchestrator.java:262 <...> java.lang.ClassLoader.loadClass(String)","7","4"
"main Group: 'main' Native ID: 23639","417","1"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","384","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","33","2"
