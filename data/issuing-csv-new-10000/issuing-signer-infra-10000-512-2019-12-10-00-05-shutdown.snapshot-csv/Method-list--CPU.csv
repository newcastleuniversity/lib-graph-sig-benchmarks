"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","27910","4778"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","17444","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","16226","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","13303","13303"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","5330","5330"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","3854","0"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","2514","2514"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1729","1729"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","1634","1634"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","1277","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","1121","1121"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","618","618"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","587","587"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","553","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","533","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","510","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","465","55"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","407","407"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","390","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","387","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","386","386"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","379","23"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","379","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","360","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","360","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","331","24"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","312","312"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","308","308"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","303","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","303","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","291","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","259","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","259","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","227","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","211","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","184","271"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","100","100"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE() SignerOrchestrator.java","87","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","87","87"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","55","55"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","31","31"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","27","27"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","24","24"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init() RecipientOrchestrator.java","10","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger) GSSignatureValidator.java","8","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature() RecipientOrchestrator.java","8","0"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String) ProofStore.java","8","8"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","7","7"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.<init>(String, ExtendedKeyPair, IMessageGateway) SignerOrchestrator.java","7","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","4","4"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round0() SignerOrchestrator.java","4","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","4","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","4","0"
