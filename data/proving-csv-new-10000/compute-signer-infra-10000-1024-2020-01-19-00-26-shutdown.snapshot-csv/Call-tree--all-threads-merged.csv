"Call Tree","Time (ms)","Level"
"<All threads>","103275","1"
"<...> java.lang.Thread.run()","102876","2"
"<14 calls> ProvingBenchmark.java:225 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification()","35201","3"
"VerifierOrchestrator.java:395 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger)","35201","4"
"VerifierOrchestrator.java:422 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers()","20091","5"
"VerifierOrchestrator.java:359 <...> eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","19268","6"
"VerifierOrchestrator.java:365 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","387","6"
"VerifierOrchestrator.java:347 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","304","6"
"VerifierOrchestrator.java:350 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","40","6"
"VerifierOrchestrator.java:345","27","6"
"VerifierOrchestrator.java:346","23","6"
"VerifierOrchestrator.java:353","16","6"
"VerifierOrchestrator.java:357 <...> java.lang.ClassLoader.loadClass(String)","8","6"
"VerifierOrchestrator.java:346 <...> java.lang.StringBuilder.append(String)","7","6"
"VerifierOrchestrator.java:357","7","6"
"VerifierOrchestrator.java:410 <...> eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger)","15097","5"
"VerifierOrchestrator.java:429 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers()","12","5"
"VerifierOrchestrator.java:267 <...> eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger)","12","6"
"<14 calls> ProvingBenchmark.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase()","30845","3"
"ProverOrchestrator.java:234 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers()","16092","4"
"ProverOrchestrator.java:447 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","15772","5"
"ProverOrchestrator.java:454 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","239","5"
"ProverOrchestrator.java:442 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","32","5"
"ProverOrchestrator.java:445 <...> eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.<init>(GSCommitment, int, SignerPublicKey, ProofStore)","24","5"
"ProverOrchestrator.java:443","8","5"
"ProverOrchestrator.java:442","7","5"
"ProverOrchestrator.java:447","7","5"
"ProverOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ()","14752","4"
"ProverOrchestrator.java:464 <...> eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase()","14752","5"
"<15 calls> GSBenchmark.java:150 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init()","18109","3"
"ProverOrchestrator.java:118 <...> eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator)","18074","4"
"ProverOrchestrator.java:109 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments()","35","4"
"ProverOrchestrator.java:140 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int)","35","5"
"ProverOrchestrator.java:208 <...> eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","20","6"
"ProverOrchestrator.java:203 <...> eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.getBaseByIndex(int)","11","6"
"ProverOrchestrator.java:196 <...> eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getVertexById(String)","3","6"
"<14 calls> ProvingBenchmark.java:222 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger)","5857","3"
"ProverOrchestrator.java:347 <...> eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger)","2565","4"
"ProverOrchestrator.java:377 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.createProofSignature()","2384","4"
"ProverOrchestrator.java:303 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","594","5"
"ProverOrchestrator.java:304 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","532","5"
"ProverOrchestrator.java:287 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","339","5"
"ProverOrchestrator.java:291 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","329","5"
"ProverOrchestrator.java:286 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","303","5"
"ProverOrchestrator.java:290 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","245","5"
"ProverOrchestrator.java:288","11","5"
"ProverOrchestrator.java:288 java.lang.StringBuilder.toString()","11","5"
"ProverOrchestrator.java:291","8","5"
"ProverOrchestrator.java:301 <...> java.lang.StringBuilder.append(String)","7","5"
"ProverOrchestrator.java:356 <...> eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger)","899","4"
"ProverOrchestrator.java:362 <...> java.util.HashMap.putAll(Map)","7","4"
"<15 calls> GSBenchmark.java:141 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String)","4296","3"
"ProverOrchestrator.java:480 <...> eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","4296","4"
"<14 calls> ProvingBenchmark.java:224 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage()","2625","3"
"VerifierOrchestrator.java:121 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map)","2225","4"
"VerifierOrchestrator.java:211 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","604","5"
"VerifierOrchestrator.java:209 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","524","5"
"VerifierOrchestrator.java:195 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","354","5"
"VerifierOrchestrator.java:189 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","234","5"
"VerifierOrchestrator.java:194 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","227","5"
"VerifierOrchestrator.java:187 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","227","5"
"VerifierOrchestrator.java:186","19","5"
"VerifierOrchestrator.java:211","11","5"
"VerifierOrchestrator.java:187","7","5"
"VerifierOrchestrator.java:208","7","5"
"VerifierOrchestrator.java:208 <...> java.util.HashMap.get(Object)","4","5"
"VerifierOrchestrator.java:117 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.constructBaseCollection(Map)","392","4"
"VerifierOrchestrator.java:467 <...> eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getEdgeBase(int)","159","5"
"VerifierOrchestrator.java:447 <...> eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String)","76","5"
"VerifierOrchestrator.java:461 <...> eu.prismacloud.primitives.zkpgs.store.URN.matchesPrefix(String)","64","5"
"VerifierOrchestrator.java:453 <...> eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getVertexBase(int)","63","5"
"VerifierOrchestrator.java:458","12","5"
"VerifierOrchestrator.java:456","8","5"
"VerifierOrchestrator.java:448 <...> eu.prismacloud.primitives.zkpgs.store.URN.getIndex()","3","5"
"VerifierOrchestrator.java:443 <...> java.util.HashMap$EntryIterator.next()","3","5"
"VerifierOrchestrator.java:120 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storePublicValues()","7","4"
"VerifierOrchestrator.java:385 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.save(URN, Object)","7","5"
"<14 calls> ProvingBenchmark.java:221 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge()","1468","3"
"ProverOrchestrator.java:331 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList()","1220","4"
"ProverOrchestrator.java:391 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","661","5"
"ProverOrchestrator.java:406 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","225","5"
"ProverOrchestrator.java:407 <...> java.lang.String.valueOf(Object)","141","5"
"ProverOrchestrator.java:396 <...> java.lang.String.valueOf(Object)","115","5"
"ProverOrchestrator.java:416 <...> java.util.Collections.sort(List)","64","5"
"ProverOrchestrator.java:404","12","5"
"ProverOrchestrator.java:334 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","247","4"
"<14 calls> ProvingBenchmark.java:226 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge()","1363","3"
"VerifierOrchestrator.java:284 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList()","1159","4"
"VerifierOrchestrator.java:303 <...> eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","529","5"
"VerifierOrchestrator.java:320 <...> eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","360","5"
"VerifierOrchestrator.java:309 <...> java.lang.String.valueOf(Object)","114","5"
"VerifierOrchestrator.java:321 <...> java.lang.String.valueOf(Object)","87","5"
"VerifierOrchestrator.java:333 <...> java.util.Collections.sort(List)","43","5"
"VerifierOrchestrator.java:320","7","5"
"VerifierOrchestrator.java:318","7","5"
"VerifierOrchestrator.java:319","7","5"
"VerifierOrchestrator.java:286 <...> eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","203","4"
"<15 calls> GSBenchmark.java:149 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init()","23","3"
"VerifierOrchestrator.java:97 <...> eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","23","4"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","359","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","28","2"
"<...> java.math.BigInteger.oddModPow(BigInteger, BigInteger)","8","2"
"<...> java.util.regex.Pattern$Loop.match(Matcher, int, CharSequence)","4","2"
