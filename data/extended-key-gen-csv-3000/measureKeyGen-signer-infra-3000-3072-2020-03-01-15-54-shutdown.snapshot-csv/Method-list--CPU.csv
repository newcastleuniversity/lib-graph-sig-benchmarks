"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","512275","16"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","472770","472770"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","267333","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","266577","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","266577","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","243926","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","243790","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","243782","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","243782","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","240885","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","240885","240885"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","210931","8"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","56401","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","2973","2973"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","2897","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","991","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","991","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","820","820"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","600","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","554","99"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","437","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","411","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","410","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","410","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","401","401"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","370","8"
"java.util.regex.Pattern.compile(String) Pattern.java","354","354"
"java.lang.String.matches(String) String.java","332","332"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","306","306"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","304","12"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","292","12"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","197","249"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","181","181"
"java.util.regex.Matcher.matches() Matcher.java","160","160"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","140","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","140","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","140","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","127","127"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","96","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","96","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","96","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","96","3"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","92","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","83","20"
"java.lang.Class.getDeclaredField(String) Class.java","71","71"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","50","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","40","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","39","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","39","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","30","20"
"java.lang.StringBuilder.toString() StringBuilder.java","23","23"
"java.util.HashMap.put(Object, Object) HashMap.java","20","20"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","20","20"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","12","12"
"java.lang.Object.getClass() Object.java (native)","11","11"
"eu.prismacloud.primitives.zkpgs.store.URNType$1.<clinit>() URNType.java","10","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","8","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","8","8"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.getKeyGenParameters() KeyGenParameters.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","7","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","3","3"
"java.lang.Class.getGenericSuperclass() Class.java","3","3"
