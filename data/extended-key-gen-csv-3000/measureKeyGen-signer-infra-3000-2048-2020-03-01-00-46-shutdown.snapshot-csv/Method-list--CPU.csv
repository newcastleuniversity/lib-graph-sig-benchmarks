"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","163502","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","143231","143231"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","84765","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","84205","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","84205","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","77737","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","77682","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","77682","12"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","77682","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","76198","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","76198","76198"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","66867","27"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","17897","8"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","1503","1503"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","1475","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","971","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","971","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","575","575"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","531","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","439","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","405","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","383","383"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","343","343"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","333","381"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","316","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","301","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","301","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","299","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","284","284"
"java.lang.String.matches(String) String.java","227","227"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","183","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","183","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","150","150"
"java.util.regex.Matcher.matches() Matcher.java","119","119"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","107","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","107","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","91","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","59","59"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","56","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","43","19"
"java.lang.Class.getDeclaredField(String) Class.java","39","39"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","39","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","39","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","37","37"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","32","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","32","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","32","0"
"java.util.HashMap.put(Object, Object) HashMap.java","32","32"
"java.lang.StringBuilder.append(String) StringBuilder.java","24","24"
"eu.prismacloud.primitives.zkpgs.store.URNType$1.<clinit>() URNType.java","23","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","16","16"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","15","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.createExtendedKeyPair() ExtendedKeyPair.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","4","0"
"java.lang.StringBuilder.toString() StringBuilder.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createCommitmentGroupGenerator(BigInteger, BigInteger) GSUtils.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","1","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","1","1"
