"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","4317","11"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","2813","2813"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","2507","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2047","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2047","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","1778","20"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","922","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","922","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","855","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","729","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","643","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","643","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","643","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","611","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","611","611"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","570","4"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","503","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","446","446"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","395","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","361","361"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","359","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","359","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","352","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","351","0"
"java.lang.String.matches(String) String.java","315","315"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","257","293"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","229","229"
"java.util.regex.Matcher.matches() Matcher.java","227","227"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","227","227"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","203","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","203","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","203","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","203","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","203","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","123","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","122","122"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","99","99"
"java.lang.Class.getDeclaredField(String) Class.java","54","54"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","37","37"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","23","0"
"java.lang.StringBuilder.append(String) StringBuilder.java","20","20"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","19","0"
"java.lang.Object.clone() Object.java (native)","19","19"
"java.math.BigInteger.multiply(BigInteger) BigInteger.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","12","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_E() GraphEncodingParameters.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","7","0"
"java.lang.String.isEmpty() String.java","7","7"
"java.util.HashMap.put(Object, Object) HashMap.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","7","7"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","0"
"java.math.BigInteger.<clinit>() BigInteger.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","7","0"
"java.lang.StringBuilder.toString() StringBuilder.java","3","3"
