"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","4428","25"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","2642","2642"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","2503","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1879","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1879","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","1818","24"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1079","11"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1079","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","795","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","685","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","650","3"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","635","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","635","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","635","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","615","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","615","615"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","592","12"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","538","538"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","480","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","417","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","385","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","385","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","373","12"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","333","333"
"java.lang.String.matches(String) String.java","293","293"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","285","285"
"java.util.regex.Matcher.matches() Matcher.java","250","250"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","248","366"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","194","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","190","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","175","175"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","170","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","131","131"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","131","131"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","103","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","103","0"
"java.lang.StringBuilder.toString() StringBuilder.java","48","48"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","28","28"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","27","0"
"java.lang.Object.clone() Object.java (native)","27","27"
"eu.prismacloud.primitives.zkpgs.keys.SignerPublicKey.<init>(BigInteger, GroupElement, GroupElement, GroupElement, GroupElement, Group, KeyGenParameters) SignerPublicKey.java","27","27"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","23","23"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","23","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","20","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","19","0"
"java.lang.Class.getDeclaredField(String) Class.java","15","15"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"java.math.BigInteger.subtract(BigInteger) BigInteger.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","11","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","8","0"
"java.lang.Object.getClass() Object.java (native)","8","8"
"java.util.HashMap.put(Object, Object) HashMap.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","3","3"
