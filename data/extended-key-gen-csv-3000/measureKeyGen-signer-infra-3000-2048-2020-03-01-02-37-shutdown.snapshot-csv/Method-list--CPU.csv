"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","169939","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","147943","147943"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","84530","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","84506","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","84375","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","84375","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","84375","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","83966","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","83966","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","83094","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","83094","83094"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","66673","12"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","17857","8"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","1312","1312"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","1280","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","882","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","882","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","640","8"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","572","572"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","496","120"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","452","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","423","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","421","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","393","393"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","357","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","337","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","333","345"
"java.lang.String.matches(String) String.java","305","305"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","293","293"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","203","203"
"java.util.regex.Matcher.matches() Matcher.java","151","151"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","135","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","127","127"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","119","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","119","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","116","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","116","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","116","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","111","0"
"java.lang.Class.getDeclaredField(String) Class.java","91","91"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","84","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","47","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","26","26"
"java.lang.StringBuilder.toString() StringBuilder.java","20","20"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","19","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","19","19"
"java.math.BigInteger.compareTo(BigInteger) BigInteger.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","16","0"
"java.lang.StringBuilder.append(String) StringBuilder.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","8","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","8","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.verifySGeneratorOfQRN(BigInteger, BigInteger) CryptoUtilsFacade.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.verifySGeneratorOfQRN(BigInteger, BigInteger) GSUtils.java","4","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","4","4"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.<init>(SignerKeyPair, GraphEncodingParameters, KeyGenParameters) ExtendedKeyPair.java","3","0"
