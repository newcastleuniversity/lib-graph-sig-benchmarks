"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","63459","3"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","55936","55936"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","34953","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","34689","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","34689","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","27794","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","27683","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","27679","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","27679","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","27540","12"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","27228","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","27228","27228"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","7413","8"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","682","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","682","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","527","527"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","455","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","393","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","370","370"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","345","345"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","289","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","281","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","207","207"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","199","199"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","199","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","199","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","199","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","196","12"
"java.lang.String.matches(String) String.java","175","175"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","173","177"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","82","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","78","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","72","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","72","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","72","0"
"java.util.regex.Matcher.matches() Matcher.java","72","72"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","48","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","48","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","48","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","47","47"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","44","44"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","30","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","26","26"
"java.lang.StringBuilder.append(String) StringBuilder.java","23","23"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getNameSpaceComponentClass(URNType) URNType.java","7","7"
"java.lang.reflect.Field.get(Object) Field.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","7","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<init>(String) NamespaceComponent.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","3","3"
