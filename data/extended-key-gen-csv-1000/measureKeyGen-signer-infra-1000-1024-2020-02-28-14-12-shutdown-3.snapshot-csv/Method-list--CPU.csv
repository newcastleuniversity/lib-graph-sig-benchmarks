"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","7323","8"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5758","5758"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5216","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4935","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4935","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","4052","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","1383","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1163","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","1027","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","1027","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","1027","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","991","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","991","991"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","695","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","695","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","420","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","381","381"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","347","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","347","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","343","343"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","335","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","335","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","327","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","314","338"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","277","277"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","275","7"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","273","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","225","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","191","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","191","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","187","187"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","183","11"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","143","143"
"java.lang.String.matches(String) String.java","131","131"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","81","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","81","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","81","0"
"java.util.regex.Matcher.matches() Matcher.java","81","81"
"java.math.BigInteger.add(BigInteger) BigInteger.java","71","71"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","67","67"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","43","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","43","8"
"java.lang.Class.getDeclaredField(String) Class.java","35","35"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","31","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","27","0"
"java.util.HashMap.put(Object, Object) HashMap.java","16","8"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","11","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","9","9"
"java.lang.StringBuilder.append(int) StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","7","0"
"java.lang.Object.getClass() Object.java (native)","7","7"
"java.lang.StringBuilder.toString() StringBuilder.java","7","7"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","0"
"java.math.BigInteger.<clinit>() BigInteger.java","7","7"
