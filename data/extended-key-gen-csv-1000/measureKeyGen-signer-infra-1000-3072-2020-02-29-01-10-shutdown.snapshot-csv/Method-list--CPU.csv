"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","150486","15"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","143322","143322"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","110281","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","110025","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","110025","11"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","87012","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","39438","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","39104","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","39097","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","39097","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","38469","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","38469","38469"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","23269","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","819","819"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","730","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","730","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","628","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","500","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","361","361"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","348","348"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","275","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","275","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","255","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","230","3"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","229","237"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","219","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","219","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","219","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","208","208"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","184","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","183","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","183","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","179","20"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","147","147"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","147","147"
"java.lang.String.matches(String) String.java","99","99"
"java.util.regex.Matcher.matches() Matcher.java","83","83"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","76","0"
"java.math.BigInteger.subtract(BigInteger) BigInteger.java","76","76"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","60","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","60","0"
"java.lang.StringBuilder.toString() StringBuilder.java","59","59"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","59","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createCommitmentGroupGenerator(BigInteger, BigInteger) GSUtils.java","55","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","47","0"
"java.lang.Class.getDeclaredField(String) Class.java","43","43"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","28","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","24","24"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","23","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","16","0"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","12","12"
"java.util.HashMap.put(Object, Object) HashMap.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroup.<init>(BigInteger) QRGroup.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createUnsafeZkpgsURN(String) URN.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","4","0"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","4","4"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.isInRange(BigInteger, BigInteger, BigInteger) CryptoUtilsFacade.java","3","0"
