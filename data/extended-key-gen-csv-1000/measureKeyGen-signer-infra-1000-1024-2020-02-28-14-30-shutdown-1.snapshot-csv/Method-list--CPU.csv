"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","8818","11"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","6563","6563"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5276","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4988","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4988","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","4112","12"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","2879","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","2739","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","2739","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","2739","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","2707","3"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","2703","2703"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1163","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","634","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","634","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","392","392"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","390","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","359","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","298","298"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","281","352"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","243","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","228","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","228","20"
"java.util.regex.Matcher.matches() Matcher.java","167","167"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","163","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","139","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","131","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","131","0"
"java.lang.String.matches(String) String.java","127","127"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","120","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","120","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","120","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","120","56"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","120","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","115","115"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","96","96"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","95","95"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","91","91"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","67","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","64","4"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","48","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","48","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","43","43"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","31","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","24","24"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","24","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","15","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","12","12"
"java.lang.StringBuilder.toString() StringBuilder.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","8","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","8","8"
"java.lang.reflect.Field.get(Object) Field.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","7","7"
"java.util.HashMap.put(Object, Object) HashMap.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.<init>(SignerKeyPair, GraphEncodingParameters, KeyGenParameters) ExtendedKeyPair.java","7","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","4","4"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","4","0"
