"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","9468","10"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","7029","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","7019","7019"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5902","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","5902","3"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","5428","63"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1704","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1704","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1600","3"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1356","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","1177","1177"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","955","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","867","7"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","707","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","691","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","691","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","691","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","671","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","671","671"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","607","3"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","595","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","507","32"
"java.lang.String.matches(String) String.java","467","467"
"java.util.regex.Pattern.compile(String) Pattern.java","379","379"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","376","376"
"java.util.regex.Matcher.matches() Matcher.java","375","375"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","347","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","331","331"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","327","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","327","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","307","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","278","361"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","276","276"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","159","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","159","0"
"java.lang.Class.getDeclaredField(String) Class.java","111","111"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","88","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","87","36"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","71","71"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","43","43"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","33","33"
"java.util.HashMap.put(Object, Object) HashMap.java","31","11"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","27","27"
"java.lang.Object.clone() Object.java (native)","27","27"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","24","24"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","20","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","20","20"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","19","0"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","19","8"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","15","15"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_E() GraphEncodingParameters.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","11","0"
"java.lang.String.hashCode() String.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","7","7"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.isInRange(BigInteger, BigInteger, BigInteger) CryptoUtilsFacade.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URNType$1.<clinit>() URNType.java","4","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","3","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.CRT.<clinit>() CRT.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"java.util.logging.Logger.getLogger(String) Logger.java","3","3"
