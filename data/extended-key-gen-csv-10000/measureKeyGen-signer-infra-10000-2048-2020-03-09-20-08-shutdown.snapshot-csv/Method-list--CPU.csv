"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","339595","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","315962","315962"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","255511","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","253831","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","253831","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","201082","79"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","82616","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","82497","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","82497","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","82497","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","81128","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","81128","81128"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","54429","32"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1435","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1435","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","1377","1377"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","1369","12"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1261","20"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1094","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","1083","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","855","855"
"java.lang.Object.<init>() Object.java","835","823"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","827","20"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","787","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","779","56"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","740","740"
"java.lang.String.matches(String) String.java","683","683"
"java.util.regex.Pattern.matches(String, CharSequence) Pattern.java","679","679"
"java.util.regex.Matcher.matches() Matcher.java","499","499"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","412","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","404","12"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","400","400"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","387","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","387","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","328","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","311","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","264","264"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","187","219"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","183","0"
"java.lang.Class.getDeclaredField(String) Class.java","112","112"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","79","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","75","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","63","63"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","47","47"
"java.util.HashMap.put(Object, Object) HashMap.java","39","23"
"java.lang.Object.getClass() Object.java (native)","35","35"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","26","0"
"java.util.regex.Pattern.<clinit>() Pattern.java","26","26"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","24","24"
"java.lang.String.hashCode() String.java","23","23"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","22","22"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","19","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","19","19"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","19","19"
"java.lang.StringBuilder.toString() StringBuilder.java","19","19"
"java.lang.reflect.Field.get(Object) Field.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","15","0"
"java.math.BigInteger.<clinit>() BigInteger.java","15","15"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","14","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","14","0"
"java.lang.StringBuilder.append(String) StringBuilder.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","11","0"
"java.lang.Class.getInterfaces() Class.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","11","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","11","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.isEnumerable(URNType) URNType.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","3","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","3","3"
