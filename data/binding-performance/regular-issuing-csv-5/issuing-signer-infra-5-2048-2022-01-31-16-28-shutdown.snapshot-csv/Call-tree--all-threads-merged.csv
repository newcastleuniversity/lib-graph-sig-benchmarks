"Call Tree","Time (ms)","Level"
"<All threads>","1352","1"
"<...> java.lang.Thread.run()","1002","2"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","570","3"
"SignerOrchestrator.java:282 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","377","4"
"SignerOrchestrator.java:358 eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","377","5"
"GSGraph.java:64 <...> org.jgrapht.io.GraphImporter.importGraph(Graph, InputStream)","292","6"
"GSGraph.java:60 <...> java.lang.ClassLoader.loadClass(String)","64","6"
"GSGraph.java:60 <...> org.jgrapht.graph.DefaultUndirectedGraph.<init>(Class)","12","6"
"GSGraph.java:62 eu.prismacloud.primitives.zkpgs.graph.GraphMLProvider.createImporter()","7","6"
"GraphMLProvider.java:79 <...> java.lang.ClassLoader.loadClass(String)","7","7"
"SignerOrchestrator.java:292 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","76","4"
"SignerOrchestrator.java:347 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","56","5"
"SignerOrchestrator.java:372 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","39","6"
"SignerOrchestrator.java:525 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","39","7"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","39","8"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","39","9"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","39","10"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","39","11"
"SignerOrchestrator.java:373 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","16","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","16","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","16","8"
"SignerOrchestrator.java:345 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","20","5"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","20","6"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","9"
"SignerOrchestrator.java:302 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","68","4"
"SignerOrchestrator.java:441 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","35","5"
"SignerOrchestrator.java:191 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","35","6"
"CryptoUtilsFacade.java:67 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger)","35","7"
"GSUtils.java:180 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger)","35","8"
"GSUtils.java:208 eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger)","20","9"
"GSUtils.java:709 <...> java.math.BigInteger.isProbablePrime(int)","20","10"
"GSUtils.java:206 <...> java.math.BigInteger.<init>(int, Random)","15","9"
"SignerOrchestrator.java:450 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","32","5"
"GSSignature.java:177 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","32","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","32","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","32","8"
"SignerOrchestrator.java:307 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","48","4"
"SignerOrchestrator.java:321 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","48","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","29","6"
"SigningQProverOrchestrator.java:114 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","29","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","29","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","29","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","29","10"
"SigningQProverOrchestrator.java:90 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","19","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","19","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","16","8"
"GSUtils.java:594 <...> java.lang.String.getBytes(Charset)","2","8"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","130","3"
"RecipientOrchestrator.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","54","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","43","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","25","6"
"SigningQVerifierOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","25","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","25","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","25","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","25","10"
"SigningQVerifierOrchestrator.java:104 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","18","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","18","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","18","8"
"SigningQVerifierOrchestrator.java:137 eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger)","11","5"
"SigningQCorrectnessVerifier.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","8"
"RecipientOrchestrator.java:207 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","37","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","37","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","28","6"
"GSSignatureValidator.java:86 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","28","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","28","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","28","9"
"GSSignatureValidator.java:114 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifyAgainstHatQ()","8","6"
"GSSignatureValidator.java:94 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","9"
"RecipientOrchestrator.java:243 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","30","4"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","30","5"
"URN.java:161 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","30","6"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","30","7"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","30","8"
"URNType.java:723 <...> java.lang.String.matches(String)","30","9"
"RecipientOrchestrator.java:201 <...> java.lang.ClassLoader.loadClass(String)","4","4"
"RecipientOrchestrator.java:203 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","2","4"
"GSSignatureValidator.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","2","7"
"<16 calls> IssuingBenchmark.java:141 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","86","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","86","4"
"<14 calls> IssuingBenchmark.java:327 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","55","3"
"RecipientOrchestrator.java:361 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","55","4"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","55","5"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","48","3"
"RecipientOrchestrator.java:145 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","23","4"
"GSRecipient.java:46 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey)","23","5"
"GSCommitment.java:118 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","23","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","23","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","23","8"
"RecipientOrchestrator.java:151 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","12","4"
"AbstractCommitmentProver.java:70 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness()","12","5"
"AbstractCommitmentProver.java:137 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","12","8"
"RecipientOrchestrator.java:142 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.generatevPrime()","8","4"
"GSRecipient.java:41 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumberMinusPlus(int)","8","5"
"CryptoUtilsFacade.java:35 eu.prismacloud.primitives.zkpgs.util.GSUtils.randomMinusPlusNumber(int)","8","6"
"GSUtils.java:62 <...> java.math.BigInteger.<init>(int, Random)","8","7"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","4","4"
"RecipientOrchestrator.java:253 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","4","5"
"RecipientOrchestrator.java:260 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","4","6"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","4","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","4","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","4","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","4","10"
"<16 calls> IssuingBenchmark.java:145 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","38","3"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","38","4"
"<16 calls> IssuingBenchmark.java:131 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","29","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","29","4"
"<16 calls> IssuingBenchmark.java:157 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init()","24","3"
"RecipientOrchestrator.java:112 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.generateRecipientMSK()","21","4"
"RecipientOrchestrator.java:278 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","21","5"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String)","21","6"
"CryptoUtilsFactory.java:31","21","7"
"RecipientOrchestrator.java:116 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","2","4"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","2","5"
"URN.java:157 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type)","2","6"
"NamespaceComponent.java:48 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type)","2","7"
"NamespaceComponent.java:60 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String)","2","8"
"NamespaceComponent.java:67 java.util.regex.Pattern.matcher(CharSequence)","2","9"
"<16 calls> IssuingBenchmark.java:122 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int)","10","3"
"KeyGenParameters.java:139 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int)","10","4"
"KeyGenParameters.java:88","10","5"
"<16 calls> IssuingBenchmark.java:124 eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int)","7","3"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.nextProbablePrime()","7","4"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","324","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","25","2"
