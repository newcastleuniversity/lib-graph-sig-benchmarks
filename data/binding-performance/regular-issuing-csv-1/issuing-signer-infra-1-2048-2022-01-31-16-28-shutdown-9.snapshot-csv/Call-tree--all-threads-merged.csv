"Call Tree","Time (ms)","Level"
"<All threads>","1378","1"
"<...> java.lang.Thread.run()","1031","2"
"<14 calls> IssuingBenchmark.java:325 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","510","3"
"SignerOrchestrator.java:282 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","314","4"
"SignerOrchestrator.java:358 eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","314","5"
"GSGraph.java:64 <...> org.jgrapht.io.GraphImporter.importGraph(Graph, InputStream)","303","6"
"GSGraph.java:60 <...> java.lang.ClassLoader.loadClass(String)","11","6"
"SignerOrchestrator.java:302 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","82","4"
"SignerOrchestrator.java:441 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","45","5"
"SignerOrchestrator.java:191 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","45","6"
"CryptoUtilsFacade.java:67 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger)","45","7"
"GSUtils.java:180 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger)","45","8"
"GSUtils.java:208 eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger)","45","9"
"GSUtils.java:709 <...> java.math.BigInteger.isProbablePrime(int)","45","10"
"SignerOrchestrator.java:439 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","19","5"
"SignerOrchestrator.java:495 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","8"
"SignerOrchestrator.java:486 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","8"
"SignerOrchestrator.java:450 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","8","5"
"GSSignature.java:174 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","8","6"
"GSSignature.java:193 <...> java.math.BigInteger.isProbablePrime(int)","8","7"
"SignerOrchestrator.java:443 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeA(SignerOrchestrator$SignatureData)","7","5"
"SignerOrchestrator.java:509 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","8"
"SignerOrchestrator.java:292 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","63","4"
"SignerOrchestrator.java:347 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","45","5"
"SignerOrchestrator.java:372 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","30","6"
"SignerOrchestrator.java:525 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","30","7"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","30","8"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","30","9"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","30","10"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","30","11"
"SignerOrchestrator.java:373 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","15","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","15","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","12","8"
"GSUtils.java:594 <...> java.lang.String.getBytes(Charset)","2","8"
"SignerOrchestrator.java:345 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","17","5"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","17","6"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","17","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","17","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","17","9"
"SignerOrchestrator.java:307 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","29","4"
"SignerOrchestrator.java:321 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","29","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","29","6"
"SigningQProverOrchestrator.java:114 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","29","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","29","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","29","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","29","10"
"SignerOrchestrator.java:288","21","4"
"<14 calls> IssuingBenchmark.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","129","3"
"RecipientOrchestrator.java:207 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","55","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","55","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","55","6"
"GSSignatureValidator.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","45","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","45","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","45","9"
"GSSignatureValidator.java:86 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","10","9"
"RecipientOrchestrator.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","50","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","50","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","34","6"
"SigningQVerifierOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","19","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","19","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","19","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","19","10"
"SigningQVerifierOrchestrator.java:121 java.lang.String.valueOf(Object)","15","7"
"String.java:2994 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.toString()","15","8"
"QRElement.java:191 <...> java.math.BigInteger.toString()","15","9"
"SigningQVerifierOrchestrator.java:104 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","16","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","16","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","16","8"
"RecipientOrchestrator.java:229 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","22","4"
"GSSignature.java:135 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","19","5"
"GSSignature.java:177 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","10","8"
"GSSignature.java:174 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","6","6"
"GSSignature.java:193 <...> java.math.BigInteger.isProbablePrime(int)","6","7"
"GSSignature.java:178 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","2","8"
"GSSignature.java:133 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","2","7"
"<14 calls> IssuingBenchmark.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","108","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","66","4"
"RecipientOrchestrator.java:253 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","39","5"
"RecipientOrchestrator.java:260 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","39","6"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","39","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","39","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","36","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","36","10"
"ExtendedPublicKey.java:147","3","9"
"RecipientOrchestrator.java:254 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","26","5"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","26","6"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","26","7"
"RecipientOrchestrator.java:145 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","42","4"
"GSRecipient.java:46 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey)","42","5"
"GSCommitment.java:118 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","42","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","42","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","42","8"
"<16 calls> IssuingBenchmark.java:141 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","103","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","103","4"
"<16 calls> IssuingBenchmark.java:145 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","47","3"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","47","4"
"<14 calls> IssuingBenchmark.java:327 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","46","3"
"RecipientOrchestrator.java:361 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","46","4"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","46","5"
"<16 calls> IssuingBenchmark.java:131 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","34","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","34","4"
"<14 calls> IssuingBenchmark.java:323 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round0()","11","3"
"SignerOrchestrator.java:276 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","11","4"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","11","5"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","11","6"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","11","7"
"URNType.java:723 <...> java.lang.String.matches(String)","11","8"
"<16 calls> IssuingBenchmark.java:124 eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int)","8","3"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.nextProbablePrime()","8","4"
"<16 calls> IssuingBenchmark.java:157 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init()","7","3"
"RecipientOrchestrator.java:112 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.generateRecipientMSK()","7","4"
"RecipientOrchestrator.java:278 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","7","5"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String)","7","6"
"CryptoUtilsFactory.java:31 <...> java.lang.ClassLoader.loadClass(String)","7","7"
"<16 calls> IssuingBenchmark.java:122 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int)","7","3"
"KeyGenParameters.java:139 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int)","7","4"
"KeyGenParameters.java:114 eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>()","7","5"
"NumberConstants.java:7 java.math.BigInteger.<clinit>()","7","6"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","318","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","28","2"
