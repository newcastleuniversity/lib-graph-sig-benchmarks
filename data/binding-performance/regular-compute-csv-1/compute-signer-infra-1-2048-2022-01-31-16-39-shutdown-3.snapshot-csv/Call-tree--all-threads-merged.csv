"Call Tree","Time (ms)","Level"
"<All threads>","1036","1"
"<...> java.lang.Thread.run()","727","2"
"<14 calls> ProvingBenchmark.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase()","207","3"
"ProverOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ()","118","4"
"ProverOrchestrator.java:464 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase()","118","5"
"PossessionProver.java:93 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase()","118","6"
"PossessionProver.java:105 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ()","110","7"
"PossessionProver.java:150 <...> java.util.logging.Logger.info(String)","86","8"
"PossessionProver.java:192 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","10"
"PossessionProver.java:153 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","10"
"PossessionProver.java:104 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.createWitnessRandomness()","8","7"
"PossessionProver.java:142 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","8","8"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","8","9"
"URN.java:161 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","8","10"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","8","11"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","8","12"
"URNType.java:723","8","13"
"ProverOrchestrator.java:234 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers()","42","4"
"ProverOrchestrator.java:447 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","42","5"
"AbstractCommitmentProver.java:70 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness()","42","6"
"AbstractCommitmentProver.java:137 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","42","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","42","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","42","9"
"ProverOrchestrator.java:239 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseProvers(List)","34","4"
"ProverOrchestrator.java:426 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executeCompoundPreChallengePhase()","34","5"
"PairWiseDifferenceProver.java:129 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executePreChallengePhase()","34","6"
"PairWiseDifferenceProver.java:139 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.computeWitness()","34","7"
"PairWiseDifferenceProver.java:315 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","17","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","17","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","17","10"
"PairWiseDifferenceProver.java:317 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","10"
"PairWiseDifferenceProver.java:318 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","10"
"ProverOrchestrator.java:218 eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind()","12","4"
"GSSignature.java:108 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","12","7"
"<15 calls> GSBenchmark.java:144 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","123","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","123","4"
"<14 calls> ProvingBenchmark.java:225 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification()","121","3"
"VerifierOrchestrator.java:396 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger)","121","4"
"VerifierOrchestrator.java:423 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers()","58","5"
"VerifierOrchestrator.java:360 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","58","6"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","58","7"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","47","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","47","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","47","10"
"AbstractCommitmentVerifier.java:94 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","6","10"
"AbstractCommitmentVerifier.java:80 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","4","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","4","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","4","10"
"VerifierOrchestrator.java:411 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger)","43","5"
"PossessionVerifier.java:157 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger)","43","6"
"PossessionVerifier.java:119 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","27","9"
"PossessionVerifier.java:140 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse()","9","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse()","9","8"
"QRElement.java:114 <...> java.math.BigInteger.modInverse(BigInteger)","9","9"
"PossessionVerifier.java:145 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","9"
"VerifierOrchestrator.java:430 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers()","19","5"
"VerifierOrchestrator.java:268 eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger)","19","6"
"PairWiseDifferenceVerifier.java:98 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","19","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","19","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","19","9"
"<15 calls> GSBenchmark.java:163 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init()","85","3"
"ProverOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator)","41","4"
"GSProver.java:70 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","21","5"
"GSCommitment.java:97 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","21","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","21","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","21","8"
"GSProver.java:69 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","19","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","19","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","19","7"
"ProverOrchestrator.java:109 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments()","26","4"
"ProverOrchestrator.java:140 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int)","26","5"
"ProverOrchestrator.java:208 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","26","6"
"GSCommitment.java:97 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","26","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","26","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","26","9"
"ProverOrchestrator.java:126 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.initPairWiseDifferenceProvers()","17","4"
"ProverOrchestrator.java:164 <...> java.lang.ClassLoader.loadClass(String)","17","5"
"<15 calls> GSBenchmark.java:154 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String)","52","3"
"ProverOrchestrator.java:480 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","52","4"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","52","5"
"<14 calls> ProvingBenchmark.java:221 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge()","48","3"
"ProverOrchestrator.java:334 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","26","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","26","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","26","6"
"ProverOrchestrator.java:331 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList()","21","4"
"ProverOrchestrator.java:391 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","21","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","21","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","21","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","21","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","21","9"
"<14 calls> ProvingBenchmark.java:226 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge()","42","3"
"VerifierOrchestrator.java:285 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList()","25","4"
"VerifierOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","25","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","25","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","25","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","25","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","25","9"
"VerifierOrchestrator.java:287 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","16","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","16","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","16","6"
"<14 calls> ProvingBenchmark.java:222 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePostChallengePhase(BigInteger)","11","3"
"ProverOrchestrator.java:347 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger)","11","4"
"PossessionProver.java:248 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","11","5"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","11","6"
"URN.java:161 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","11","7"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","11","8"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","11","9"
"URNType.java:723","11","10"
"<16 calls> ProverOrchestratorPerf.java:49 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.<init>(ExtendedPublicKey, IMessageGateway)","8","3"
"ProverOrchestrator.java:49 eu.prismacloud.primitives.zkpgs.util.GSLoggerConfiguration.<clinit>()","8","4"
"GSLoggerConfiguration.java:19 <...> java.net.URLClassLoader.getResourceAsStream(String)","8","5"
"<15 calls> GSBenchmark.java:162 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.init()","5","3"
"VerifierOrchestrator.java:94 eu.prismacloud.primitives.zkpgs.verifier.GSVerifier.computeNonce()","5","4"
"GSVerifier.java:65 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","5","5"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String)","5","6"
"CryptoUtilsFactory.java:31 <...> java.lang.ClassLoader.loadClass(String)","5","7"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","292","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","17","2"
