"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","927","19"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","451","451"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","391","391"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.round2() SignerVCOrchestrator.java","327","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","319","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","319","0"
"java.io.ObjectInputStream.readObject() ObjectInputStream.java","221","371"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.createPartialSignature(SignerVCOrchestrator$VCSignatureData, ExtendedPublicKey) SignerVCOrchestrator.java","219","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","187","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List) ExtendedPublicKey.java","187","8"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round1() RecipientVCOrchestrator.java","183","0"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List) BaseRepresentation.java","155","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","155","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","151","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round3() RecipientVCOrchestrator.java","147","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger) GSUtils.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger) GSUtils.java","115","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","115","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","115","115"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator$VCSignatureData.computeRandomPrimeE() SignerVCOrchestrator.java","115","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeChallenge() SignerVCOrchestrator.java","107","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.populateChallengeList() SignerVCOrchestrator.java","107","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerVCOrchestrator.java","107","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","91","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","87","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","87","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","87","0"
"java.io.ObjectOutputStream.writeObject(Object) ObjectOutputStream.java","87","155"
"java.util.ArrayList.add(Object) ArrayList.java","83","83"
"java.lang.String.valueOf(Object) String.java","79","79"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey) GSCommitment.java","79","0"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","79","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","67","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.computeChallenge() RecipientVCOrchestrator.java","67","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.populateChallengeList() RecipientVCOrchestrator.java","43","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","40","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","40","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","36","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness() AbstractCommitmentProver.java","35","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","35","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","35","35"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeQ(SignerVCOrchestrator$VCSignatureData) SignerVCOrchestrator.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","27","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int) GSUtils.java","27","0"
"java.security.MessageDigest.update(byte[]) MessageDigest.java","27","27"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","19","0"
"java.util.HashMap$Values.iterator() HashMap.java","16","16"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","15","15"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse() QRElement.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse() QRElement.java","8","0"
"java.math.BigInteger.modInverse(BigInteger) BigInteger.java","8","8"
"eu.prismacloud.primitives.zkpgs.keys.SignerPublicKey.addToChallengeContext(List) SignerPublicKey.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","0"
"java.math.BigInteger.<clinit>() BigInteger.java","7","7"
