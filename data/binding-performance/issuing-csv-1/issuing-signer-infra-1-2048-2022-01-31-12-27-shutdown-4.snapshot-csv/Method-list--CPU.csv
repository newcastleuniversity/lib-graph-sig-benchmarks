"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","822","16"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","332","332"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.round2() SignerVCOrchestrator.java","299","0"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List) BaseRepresentation.java","235","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","235","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List) ExtendedPublicKey.java","235","0"
"java.lang.String.valueOf(Object) String.java","235","235"
"java.io.ObjectInputStream.readObject() ObjectInputStream.java","218","389"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","179","179"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","159","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","159","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.createPartialSignature(SignerVCOrchestrator$VCSignatureData, ExtendedPublicKey) SignerVCOrchestrator.java","139","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round1() RecipientVCOrchestrator.java","139","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","131","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","131","194"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round3() RecipientVCOrchestrator.java","119","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","115","0"
"java.io.ObjectOutputStream.writeObject(Object) ObjectOutputStream.java","95","147"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeChallenge() SignerVCOrchestrator.java","95","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerVCOrchestrator.java","95","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.computeChallenge() RecipientVCOrchestrator.java","91","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.populateChallengeList() SignerVCOrchestrator.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","67","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","63","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","63","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.prepareProvingSigningQ(GSSignature) SignerVCOrchestrator.java","63","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","59","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int) GSUtils.java","59","0"
"java.security.MessageDigest.update(byte[]) MessageDigest.java","59","59"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.populateChallengeList() RecipientVCOrchestrator.java","55","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","52","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","52","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","52","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse() QRElement.java","52","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modInverse() QRElement.java","52","0"
"java.math.BigInteger.modInverse(BigInteger) BigInteger.java","52","52"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","47","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","40","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger) GSUtils.java","40","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger) GSUtils.java","40","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","40","40"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator$VCSignatureData.computeRandomPrimeE() SignerVCOrchestrator.java","40","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","35","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","26","26"
"eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey) GSCommitment.java","23","0"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","23","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","23","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.init() RecipientVCOrchestrator.java","19","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","19","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","19","19"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness() AbstractCommitmentProver.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","16","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","16","0"
"java.util.regex.Pattern.compile(String) Pattern.java","15","15"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","11","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","8","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","8","8"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","4","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","4","4"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String) URN.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","3","0"
"java.util.regex.Matcher.matches() Matcher.java","3","3"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitnessRandomness() AbstractCommitmentProver.java","3","0"
"eu.prismacloud.primitives.zkpgs.prover.IssuingCommitmentProver.getTildeRandomnessURN() IssuingCommitmentProver.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class) URNType.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","3","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","3","0"
"java.lang.String.matches(String) String.java","3","3"
