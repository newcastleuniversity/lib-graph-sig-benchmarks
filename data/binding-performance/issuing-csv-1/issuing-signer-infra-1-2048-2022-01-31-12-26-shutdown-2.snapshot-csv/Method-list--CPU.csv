"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","882","16"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.round2() SignerVCOrchestrator.java","383","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","379","379"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","345","345"
"java.io.ObjectInputStream.readObject() ObjectInputStream.java","210","370"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.createPartialSignature(SignerVCOrchestrator$VCSignatureData, ExtendedPublicKey) SignerVCOrchestrator.java","207","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","187","187"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","187","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","187","0"
"java.security.MessageDigest.update(byte[]) MessageDigest.java","135","135"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger) GSUtils.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger) GSUtils.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","135","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator$VCSignatureData.computeRandomPrimeE() SignerVCOrchestrator.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String) FilePersistenceUtil.java","135","0"
"java.math.BigInteger.toString(int) BigInteger.java","131","131"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round1() RecipientVCOrchestrator.java","123","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","120","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int) GSUtils.java","120","0"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round3() RecipientVCOrchestrator.java","119","0"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List) BaseRepresentation.java","88","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","88","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List) ExtendedPublicKey.java","88","0"
"java.lang.String.valueOf(Object) String.java","88","88"
"java.io.ObjectOutputStream.writeObject(Object) ObjectOutputStream.java","87","147"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.computeChallenge() RecipientVCOrchestrator.java","84","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerVCOrchestrator.java","79","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","67","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","59","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","59","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","59","0"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","59","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeChallenge() SignerVCOrchestrator.java","51","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","51","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","51","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.prepareProvingSigningQ(GSSignature) SignerVCOrchestrator.java","51","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","51","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness() AbstractCommitmentProver.java","39","0"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","39","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","35","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","35","35"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger) AbstractCommitmentVerifier.java","27","0"
"eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger) AbstractCommitmentVerifier.java","27","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","23","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","23","23"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","20","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","20","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeQ(SignerVCOrchestrator$VCSignatureData) SignerVCOrchestrator.java","20","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","19","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","19","19"
"uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.init() RecipientVCOrchestrator.java","19","0"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","16","0"
"uk.ac.ncl.cascade.binding.SignerVCOrchestrator.populateChallengeList() SignerVCOrchestrator.java","16","0"
"eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger) SigningQCorrectnessVerifier.java","15","0"
"java.math.BigInteger.modInverse(BigInteger) BigInteger.java","7","7"
