"Call Tree","Time (ms)","Level"
"eu.prismacloud.primitives.grs.bench.IssuingVCBenchmark.SerializeGSBenchmark.issuing-jmh-worker-1 Group: 'main' Native ID: 209671","890","1"
"<...> java.lang.Thread.run()","882","2"
"<14 calls> IssuingVCBenchmark.java:327 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.round2()","383","3"
"SignerVCOrchestrator.java:278 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.createPartialSignature(SignerVCOrchestrator$VCSignatureData, ExtendedPublicKey)","207","4"
"SignerVCOrchestrator.java:439 uk.ac.ncl.cascade.binding.SignerVCOrchestrator$VCSignatureData.computeRandomPrimeE()","135","5"
"SignerVCOrchestrator.java:165 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","135","6"
"CryptoUtilsFacade.java:67 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger)","135","7"
"GSUtils.java:180 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger)","135","8"
"GSUtils.java:208 eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger)","135","9"
"GSUtils.java:709 <...> java.math.BigInteger.isProbablePrime(int)","135","10"
"SignerVCOrchestrator.java:448 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","51","5"
"GSSignature.java:174 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","51","6"
"GSSignature.java:193 <...> java.math.BigInteger.isProbablePrime(int)","51","7"
"SignerVCOrchestrator.java:437 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeQ(SignerVCOrchestrator$VCSignatureData)","20","5"
"SignerVCOrchestrator.java:426 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","8"
"SignerVCOrchestrator.java:266 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","79","4"
"SignerVCOrchestrator.java:363 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeChallenge()","51","5"
"SignerVCOrchestrator.java:374 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","35","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","35","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","35","8"
"SignerVCOrchestrator.java:373 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.populateChallengeList()","16","6"
"SignerVCOrchestrator.java:382 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","16","7"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","16","8"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","16","9"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","16","10"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","16","11"
"SignerVCOrchestrator.java:361 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","27","5"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","27","6"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","27","9"
"SignerVCOrchestrator.java:283 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.prepareProvingSigningQ(GSSignature)","51","4"
"SignerVCOrchestrator.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","51","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","51","6"
"SigningQProverOrchestrator.java:114 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","51","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","51","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","51","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","51","10"
"SignerVCOrchestrator.java:254 <...> java.math.BigInteger.toString(int)","43","4"
"<14 calls> IssuingVCBenchmark.java:326 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round1()","123","3"
"RecipientVCOrchestrator.java:123 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.computeChallenge()","84","4"
"RecipientVCOrchestrator.java:262 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","84","5"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","84","6"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","84","7"
"RecipientVCOrchestrator.java:121 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","39","4"
"AbstractCommitmentProver.java:70 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness()","39","5"
"AbstractCommitmentProver.java:137 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","39","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","39","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","39","8"
"<14 calls> IssuingVCBenchmark.java:328 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round3()","119","3"
"RecipientVCOrchestrator.java:170 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","59","4"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","59","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","59","6"
"GSSignatureValidator.java:86 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","59","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","59","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","59","9"
"RecipientVCOrchestrator.java:183 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","35","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","20","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","20","6"
"SigningQVerifierOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","20","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","20","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","20","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","20","10"
"SigningQVerifierOrchestrator.java:137 eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger)","15","5"
"SigningQCorrectnessVerifier.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","15","8"
"RecipientVCOrchestrator.java:192 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","23","4"
"GSSignature.java:135 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","15","5"
"GSSignature.java:177 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","8"
"GSSignature.java:178 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","4","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","4","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","4","8"
"GSSignature.java:133 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","7"
"<16 calls> IssuingVCBenchmark.java:141 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","103","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","103","4"
"<16 calls> IssuingVCBenchmark.java:145 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","59","3"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","59","4"
"<16 calls> IssuingVCBenchmark.java:131 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","31","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","31","4"
"<16 calls> IssuingVCBenchmark.java:124 eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int)","23","3"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.nextProbablePrime()","23","4"
"<16 calls> IssuingVCBenchmark.java:159 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.init()","19","3"
"RecipientVCOrchestrator.java:92 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","19","4"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int)","19","5"
"GSUtils.java:269 <...> java.math.BigInteger.<init>(int, Random)","19","6"
"<...> java.math.BigInteger.modInverse(BigInteger)","7","2"
"main Group: 'main' Native ID: 209636","381","1"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","345","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","35","2"
