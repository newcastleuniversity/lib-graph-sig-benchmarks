"Call Tree","Time (ms)","Level"
"<All threads>","1237","1"
"<...> java.lang.Thread.run()","870","2"
"<14 calls> IssuingVCBenchmark.java:327 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.round2()","419","3"
"SignerVCOrchestrator.java:278 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.createPartialSignature(SignerVCOrchestrator$VCSignatureData, ExtendedPublicKey)","227","4"
"SignerVCOrchestrator.java:439 uk.ac.ncl.cascade.binding.SignerVCOrchestrator$VCSignatureData.computeRandomPrimeE()","147","5"
"SignerVCOrchestrator.java:165 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","147","6"
"CryptoUtilsFacade.java:67 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger)","147","7"
"GSUtils.java:180 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger)","147","8"
"GSUtils.java:208 eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger)","147","9"
"GSUtils.java:709 <...> java.math.BigInteger.isProbablePrime(int)","147","10"
"SignerVCOrchestrator.java:437 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeQ(SignerVCOrchestrator$VCSignatureData)","43","5"
"SignerVCOrchestrator.java:426 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","43","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","43","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","43","8"
"SignerVCOrchestrator.java:448 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","27","5"
"GSSignature.java:177 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","27","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","27","8"
"SignerVCOrchestrator.java:441 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeA(SignerVCOrchestrator$VCSignatureData)","8","5"
"SignerVCOrchestrator.java:401 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","8"
"SignerVCOrchestrator.java:266 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","135","4"
"SignerVCOrchestrator.java:361 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","115","5"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","115","6"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","115","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","115","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","115","9"
"SignerVCOrchestrator.java:363 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.computeChallenge()","20","5"
"SignerVCOrchestrator.java:373 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.populateChallengeList()","20","6"
"SignerVCOrchestrator.java:382 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","20","7"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","20","8"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","20","9"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","20","10"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","20","11"
"SignerVCOrchestrator.java:283 uk.ac.ncl.cascade.binding.SignerVCOrchestrator.prepareProvingSigningQ(GSSignature)","55","4"
"SignerVCOrchestrator.java:326 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","43","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","35","6"
"SigningQProverOrchestrator.java:114 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","35","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","35","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","35","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","35","10"
"SigningQProverOrchestrator.java:90 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","8","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","8","7"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","8","8"
"SignerVCOrchestrator.java:324 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.executePreChallengePhase()","12","5"
"SigningQProverOrchestrator.java:76 eu.prismacloud.primitives.zkpgs.prover.SigningQCorrectnessProver.executePreChallengePhase()","12","6"
"SigningQCorrectnessProver.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","12","9"
"<16 calls> IssuingVCBenchmark.java:141 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","159","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","159","4"
"<14 calls> IssuingVCBenchmark.java:328 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round3()","87","3"
"RecipientVCOrchestrator.java:183 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","51","4"
"SigningQVerifierOrchestrator.java:137 eu.prismacloud.primitives.zkpgs.verifier.SigningQCorrectnessVerifier.executeVerification(BigInteger)","31","5"
"SigningQCorrectnessVerifier.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","31","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","31","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","31","8"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","20","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","20","6"
"SigningQVerifierOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","20","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","20","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","20","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","20","10"
"RecipientVCOrchestrator.java:192 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","20","4"
"GSSignature.java:135 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","12","5"
"GSSignature.java:177 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","12","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","12","8"
"GSSignature.java:133 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement)","8","5"
"QRElement.java:64","8","6"
"RecipientVCOrchestrator.java:167 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","15","4"
"GSSignatureValidator.java:86 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","15","7"
"<14 calls> IssuingVCBenchmark.java:326 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.round1()","79","3"
"RecipientVCOrchestrator.java:123 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.computeChallenge()","36","4"
"RecipientVCOrchestrator.java:261 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.populateChallengeList()","36","5"
"RecipientVCOrchestrator.java:268 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","36","6"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","36","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","36","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","32","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","32","10"
"ExtendedPublicKey.java:145 eu.prismacloud.primitives.zkpgs.keys.SignerPublicKey.addToChallengeContext(List)","4","9"
"SignerPublicKey.java:93 <...> java.lang.String.valueOf(Object)","4","10"
"RecipientVCOrchestrator.java:118 <...> java.lang.ClassLoader.loadClass(String)","12","4"
"RecipientVCOrchestrator.java:115 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","11","4"
"GSRecipient.java:46 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey)","11","5"
"GSCommitment.java:118 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","8"
"RecipientVCOrchestrator.java:121 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","11","4"
"AbstractCommitmentProver.java:70 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness()","7","5"
"AbstractCommitmentProver.java:145 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.getURNbyBaseType(BaseRepresentation, URNClass)","3","6"
"AbstractCommitmentProver.java:270 eu.prismacloud.primitives.zkpgs.store.URNType.buildURNbyBaseType(BaseRepresentation, URNClass, Class)","3","7"
"URNType.java:515 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class)","3","8"
"URNType.java:603 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","3","9"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","3","10"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","3","11"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","3","12"
"URNType.java:723 <...> java.lang.String.matches(String)","3","13"
"AbstractCommitmentProver.java:146 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","3","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","3","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","3","8"
"AbstractCommitmentProver.java:68 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitnessRandomness()","4","5"
"AbstractCommitmentProver.java:113 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.getURNbyBaseType(BaseRepresentation, URNClass)","4","6"
"AbstractCommitmentProver.java:270 eu.prismacloud.primitives.zkpgs.store.URNType.buildURNbyBaseType(BaseRepresentation, URNClass, Class)","4","7"
"URNType.java:515 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class)","4","8"
"URNType.java:603 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","4","9"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","4","10"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","4","11"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","4","12"
"URNType.java:723 <...> java.lang.String.matches(String)","4","13"
"RecipientVCOrchestrator.java:112 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.generatevPrime()","7","4"
"GSRecipient.java:41 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumberMinusPlus(int)","7","5"
"CryptoUtilsFacade.java:35 eu.prismacloud.primitives.zkpgs.util.GSUtils.randomMinusPlusNumber(int)","7","6"
"GSUtils.java:57","7","7"
"<16 calls> IssuingVCBenchmark.java:145 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","51","3"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","51","4"
"<16 calls> IssuingVCBenchmark.java:131 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","27","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","27","4"
"<16 calls> IssuingVCBenchmark.java:124 eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int)","15","3"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.pow(int)","7","4"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.nextProbablePrime()","7","4"
"<16 calls> IssuingVCBenchmark.java:159 uk.ac.ncl.cascade.binding.RecipientVCOrchestrator.init()","4","3"
"RecipientVCOrchestrator.java:99 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","4","4"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","4","5"
"URN.java:157 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type)","4","6"
"NamespaceComponent.java:48 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type)","4","7"
"NamespaceComponent.java:60 eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String)","4","8"
"NamespaceComponent.java:67 java.util.regex.Pattern.matcher(CharSequence)","4","9"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","350","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","16","2"
