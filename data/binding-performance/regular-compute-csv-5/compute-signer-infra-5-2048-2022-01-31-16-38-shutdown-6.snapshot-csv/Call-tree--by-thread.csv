"Call Tree","Time (ms)","Level"
"eu.prismacloud.primitives.grs.bench.ProvingBenchmark.ProvingVerifyingBenchmark.compute-jmh-worker-1 Group: 'main' Native ID: 486526","806","1"
"<...> java.lang.Thread.run()","806","2"
"<14 calls> ProvingBenchmark.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.executePreChallengePhase()","184","3"
"ProverOrchestrator.java:227 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeTildeZ()","106","4"
"ProverOrchestrator.java:464 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase()","106","5"
"PossessionProver.java:93 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase()","106","6"
"PossessionProver.java:105 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ()","106","7"
"PossessionProver.java:150 <...> java.util.logging.Logger.info(String)","59","8"
"PossessionProver.java:192 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","10"
"PossessionProver.java:153 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","11","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","11","10"
"PossessionProver.java:151 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","10"
"PossessionProver.java:176 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","6","10"
"ProverOrchestrator.java:234 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeCommitmentProvers()","57","4"
"ProverOrchestrator.java:447 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase()","57","5"
"AbstractCommitmentProver.java:70 eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.computeWitness()","57","6"
"AbstractCommitmentProver.java:146 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","25","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","25","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","25","9"
"AbstractCommitmentProver.java:137 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","24","9"
"AbstractCommitmentProver.java:145 eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getURNbyBaseType(BaseRepresentation, URNClass)","7","7"
"CommitmentProver.java:130 eu.prismacloud.primitives.zkpgs.prover.CommitmentProver.getTildeMURN()","7","8"
"CommitmentProver.java:98 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","7","9"
"URNType.java:617 eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int)","7","10"
"URNType.java:645","7","11"
"ProverOrchestrator.java:239 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseProvers(List)","20","4"
"ProverOrchestrator.java:426 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executeCompoundPreChallengePhase()","20","5"
"PairWiseDifferenceProver.java:129 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.executePreChallengePhase()","20","6"
"PairWiseDifferenceProver.java:139 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.computeWitness()","17","7"
"PairWiseDifferenceProver.java:317 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","9","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","9","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","9","10"
"PairWiseDifferenceProver.java:318 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","7","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","7","10"
"PairWiseDifferenceProver.java:137 eu.prismacloud.primitives.zkpgs.prover.PairWiseDifferenceProver.createWitnessRandomness()","3","7"
"PairWiseDifferenceProver.java:289 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","3","8"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int)","3","9"
"GSUtils.java:269 <...> java.math.BigInteger.<init>(int, Random)","3","10"
"<15 calls> GSBenchmark.java:163 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.init()","183","3"
"ProverOrchestrator.java:109 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computePairWiseCommitments()","94","4"
"ProverOrchestrator.java:140 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int)","69","5"
"ProverOrchestrator.java:208 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","69","6"
"GSCommitment.java:97 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","69","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","69","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","69","9"
"ProverOrchestrator.java:141 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeIndexesCommitments(int)","24","5"
"ProverOrchestrator.java:208 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","24","6"
"GSCommitment.java:97 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","24","9"
"ProverOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.prover.GSProver.computeCommitments(BaseIterator)","89","4"
"GSProver.java:70 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BigInteger, ExtendedPublicKey)","64","5"
"GSCommitment.java:97 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","64","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","64","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","64","8"
"GSProver.java:69 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","7"
"GSProver.java:67 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumberMinusPlus(int)","4","5"
"CryptoUtilsFacade.java:35 eu.prismacloud.primitives.zkpgs.util.GSUtils.randomMinusPlusNumber(int)","4","6"
"GSUtils.java:62 <...> java.math.BigInteger.<init>(int, Random)","4","7"
"<15 calls> GSBenchmark.java:144 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","137","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","131","4"
"FilePersistenceUtil.java:35 <...> java.io.ObjectInputStream.close()","5","4"
"<14 calls> ProvingBenchmark.java:225 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification()","117","3"
"VerifierOrchestrator.java:396 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.executeVerification(BigInteger)","117","4"
"VerifierOrchestrator.java:430 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computePairWiseVerifiers()","45","5"
"VerifierOrchestrator.java:264 <...> java.lang.ClassLoader.loadClass(String)","38","6"
"VerifierOrchestrator.java:268 eu.prismacloud.primitives.zkpgs.verifier.PairWiseDifferenceVerifier.executeVerification(BigInteger)","6","6"
"PairWiseDifferenceVerifier.java:92 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","6","9"
"VerifierOrchestrator.java:411 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger)","41","5"
"PossessionVerifier.java:157 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger)","41","6"
"PossessionVerifier.java:119 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","15","9"
"PossessionVerifier.java:133 <...> java.util.logging.Logger.info(String)","10","7"
"PossessionVerifier.java:143 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","6","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","6","9"
"PossessionVerifier.java:130 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","3","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","3","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","3","9"
"PossessionVerifier.java:134 <...> java.util.logging.Logger.info(String)","2","7"
"PossessionVerifier.java:145 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","2","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","2","9"
"VerifierOrchestrator.java:423 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeCommitmentVerifiers()","30","5"
"VerifierOrchestrator.java:360 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","30","6"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","30","7"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","30","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","30","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","30","10"
"<14 calls> ProvingBenchmark.java:221 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.computeChallenge()","72","3"
"ProverOrchestrator.java:331 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.populateChallengeList()","44","4"
"ProverOrchestrator.java:391 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","40","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","40","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","40","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","40","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","40","9"
"ProverOrchestrator.java:390 <...> java.lang.ClassLoader.loadClass(String)","4","5"
"ProverOrchestrator.java:334 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","28","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","28","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","28","6"
"<15 calls> GSBenchmark.java:154 eu.prismacloud.primitives.zkpgs.orchestrator.ProverOrchestrator.readSignature(String)","56","3"
"ProverOrchestrator.java:480 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","56","4"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","56","5"
"<14 calls> ProvingBenchmark.java:226 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.computeChallenge()","29","3"
"VerifierOrchestrator.java:285 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.populateChallengeList()","29","4"
"VerifierOrchestrator.java:304 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","29","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","29","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","29","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","29","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","29","9"
"<14 calls> ProvingBenchmark.java:224 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.receiveProverMessage()","16","3"
"VerifierOrchestrator.java:122 eu.prismacloud.primitives.zkpgs.orchestrator.VerifierOrchestrator.storeProofSignature(Map)","16","4"
"VerifierOrchestrator.java:188 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","16","5"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","16","6"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","16","7"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String)","16","8"
"URN.java:304 java.util.StringTokenizer.<init>(String, String)","16","9"
"main Group: 'main' Native ID: 486491","341","1"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","307","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","33","2"
