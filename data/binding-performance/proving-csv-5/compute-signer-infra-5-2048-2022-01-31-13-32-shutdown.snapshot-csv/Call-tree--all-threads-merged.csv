"Call Tree","Time (ms)","Level"
"<All threads>","767","1"
"<...> java.lang.Thread.run()","393","2"
"<14 calls> ProvingVCBenchmark.java:383 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.executePreChallengePhase()","123","3"
"ProverVCOrchestrator.java:136 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.computeTildeZ()","99","4"
"ProverVCOrchestrator.java:263 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase()","99","5"
"PossessionProver.java:93 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase()","99","6"
"PossessionProver.java:105 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ()","99","7"
"PossessionProver.java:150 <...> java.util.logging.Logger.info(String)","99","8"
"ProverVCOrchestrator.java:127 eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind()","24","4"
"GSSignature.java:108 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","24","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","24","7"
"<15 calls> ProvingVCBenchmark.java:285 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","105","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","105","4"
"<36 calls> Unsafe.java (native) eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>()","11","5"
"NamespaceComponent.java:19 <...> java.util.regex.Pattern.compile(String)","11","6"
"<14 calls> ProvingVCBenchmark.java:384 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.computeChallenge()","75","3"
"ProverVCOrchestrator.java:192 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.populateChallengeList()","54","4"
"ProverVCOrchestrator.java:204 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","49","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","49","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","49","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","49","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","49","9"
"ProverVCOrchestrator.java:226 <...> java.util.logging.Logger.log(Level, String)","5","5"
"ProverVCOrchestrator.java:195 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","20","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","20","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","20","6"
"<14 calls> ProvingVCBenchmark.java:388 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.executeVerification()","39","3"
"VerifierVCOrchestrator.java:309 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.executeVerification(BigInteger)","39","4"
"VerifierVCOrchestrator.java:161 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger)","39","5"
"PossessionVerifier.java:157 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger)","39","6"
"PossessionVerifier.java:144 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","28","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","28","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","28","9"
"PossessionVerifier.java:145 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","10","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","10","9"
"<14 calls> ProvingVCBenchmark.java:389 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.computeChallenge()","34","3"
"VerifierVCOrchestrator.java:278 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.populateChallengeList()","34","4"
"VerifierVCOrchestrator.java:194 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","34","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","34","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","34","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","34","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","34","9"
"<14 calls> ProvingVCBenchmark.java:385 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.executePostChallengePhase(BigInteger)","8","3"
"ProverVCOrchestrator.java:172 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger)","5","4"
"PossessionProver.java:302 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","5","5"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","5","6"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","5","7"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","5","8"
"URNType.java:723 <...> java.lang.String.matches(String)","5","9"
"ProverVCOrchestrator.java:178 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.createProofSignature()","3","4"
"ProverVCOrchestrator.java:312 eu.prismacloud.primitives.zkpgs.store.ProofStore.retrieve(String)","3","5"
"ProofStore.java:94 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","3","6"
"URN.java:161 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","3","7"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","3","8"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","3","9"
"URNType.java:723 <...> java.lang.String.matches(String)","3","10"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","350","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","9","2"
"java.math.MutableBigInteger.divideKnuth(MutableBigInteger, MutableBigInteger)","9","2"
"java.io.ObjectInputStream.readSerialData(Object, ObjectStreamClass)","2","2"
