"Call Tree","Time (ms)","Level"
"eu.prismacloud.primitives.grs.bench.ProvingVCBenchmark.ProvingVerifyingBenchmark.compute-jmh-worker-1 Group: 'main' Native ID: 287404","478","1"
"<...> java.lang.Thread.run()","478","2"
"<15 calls> ProvingVCBenchmark.java:285 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","129","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","129","4"
"<14 calls> ProvingVCBenchmark.java:383 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.executePreChallengePhase()","108","3"
"ProverVCOrchestrator.java:136 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.computeTildeZ()","100","4"
"ProverVCOrchestrator.java:263 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executeCompoundPreChallengePhase()","100","5"
"PossessionProver.java:93 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePreChallengePhase()","100","6"
"PossessionProver.java:105 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.computetildeZ()","97","7"
"PossessionProver.java:150 <...> java.util.logging.Logger.info(String)","79","8"
"PossessionProver.java:157 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","10"
"PossessionProver.java:151 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","8"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","9"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","10"
"PossessionProver.java:104 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.createWitnessRandomness()","3","7"
"PossessionProver.java:132 eu.prismacloud.primitives.zkpgs.util.BaseCollectionImpl.createIterator(BaseRepresentation$BASE)","3","8"
"BaseCollectionImpl.java:27 <...> java.lang.ClassLoader.loadClass(String)","3","9"
"ProverVCOrchestrator.java:127 eu.prismacloud.primitives.zkpgs.signature.GSSignature.blind()","8","4"
"GSSignature.java:108 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","8","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","8","7"
"<14 calls> ProvingVCBenchmark.java:384 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.computeChallenge()","84","3"
"ProverVCOrchestrator.java:192 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.populateChallengeList()","65","4"
"ProverVCOrchestrator.java:204 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","62","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","62","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","62","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","49","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","49","9"
"ExtendedPublicKey.java:145 eu.prismacloud.primitives.zkpgs.keys.SignerPublicKey.addToChallengeContext(List)","12","8"
"SignerPublicKey.java:96 <...> java.lang.String.valueOf(Object)","12","9"
"ProverVCOrchestrator.java:213 <...> java.util.logging.Logger.log(Level, String)","2","5"
"ProverVCOrchestrator.java:195 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","19","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","19","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","19","6"
"<14 calls> ProvingVCBenchmark.java:389 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.computeChallenge()","70","3"
"VerifierVCOrchestrator.java:278 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.populateChallengeList()","53","4"
"VerifierVCOrchestrator.java:218 <...> java.util.logging.Logger.log(Level, String)","35","5"
"VerifierVCOrchestrator.java:194 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","18","5"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","18","6"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","18","7"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","18","8"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","18","9"
"VerifierVCOrchestrator.java:280 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","16","4"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","16","5"
"GSUtils.java:594 <...> java.security.MessageDigest.update(byte[])","16","6"
"<15 calls> ProvingVCBenchmark.java:296 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.init()","18","3"
"VerifierVCOrchestrator.java:75 eu.prismacloud.primitives.zkpgs.verifier.GSVerifier.computeNonce()","10","4"
"GSVerifier.java:65 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int)","10","5"
"CryptoUtilsFacade.java:71 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String)","10","6"
"CryptoUtilsFactory.java:31 <...> java.lang.ClassLoader.loadClass(String)","10","7"
"VerifierVCOrchestrator.java:78 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","7","4"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","7","5"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","7","6"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","7","7"
"URNType.java:723 <...> java.lang.String.matches(String)","7","8"
"<14 calls> ProvingVCBenchmark.java:388 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.executeVerification()","15","3"
"VerifierVCOrchestrator.java:309 uk.ac.ncl.cascade.binding.VerifierVCOrchestrator.executeVerification(BigInteger)","15","4"
"VerifierVCOrchestrator.java:161 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeCompoundVerification(BigInteger)","15","5"
"PossessionVerifier.java:157 eu.prismacloud.primitives.zkpgs.verifier.PossessionVerifier.executeVerification(BigInteger)","15","6"
"PossessionVerifier.java:145 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","15","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","15","9"
"<16 calls> ProverVCOrchestratorPerf.java:50 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.<init>(ExtendedPublicKey, IMessageGateway)","13","3"
"ProverVCOrchestrator.java:50 eu.prismacloud.primitives.zkpgs.util.GSLoggerConfiguration.<clinit>()","13","4"
"GSLoggerConfiguration.java:19 <...> java.net.URLClassLoader.getResourceAsStream(String)","13","5"
"<14 calls> ProvingVCBenchmark.java:385 uk.ac.ncl.cascade.binding.ProverVCOrchestrator.executePostChallengePhase(BigInteger)","9","3"
"ProverVCOrchestrator.java:172 eu.prismacloud.primitives.zkpgs.prover.PossessionProver.executePostChallengePhase(BigInteger)","9","4"
"PossessionProver.java:304 eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object)","9","5"
"ProofStore.java:71 eu.prismacloud.primitives.zkpgs.store.URN.createURN(String, String)","9","6"
"URN.java:161 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","9","7"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","9","8"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","9","9"
"URNType.java:723 <...> java.lang.String.matches(String)","9","10"
"main Group: 'main' Native ID: 287355","332","1"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","312","2"
"<...> sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String)","16","2"
"<...> org.openjdk.jmh.runner.ForkedMain.<clinit>()","2","2"
