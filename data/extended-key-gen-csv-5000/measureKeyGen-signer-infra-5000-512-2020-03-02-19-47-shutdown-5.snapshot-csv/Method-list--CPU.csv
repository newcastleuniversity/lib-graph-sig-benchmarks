"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","6229","18"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","3943","3943"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","3588","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2872","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2872","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","2796","40"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","1307","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1291","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1291","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","1259","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","1259","1259"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","1255","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","1255","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","1255","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","893","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","791","12"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","703","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","666","666"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","516","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","397","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","347","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","347","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","339","15"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","335","28"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","326","326"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","307","0"
"java.lang.String.matches(String) String.java","295","295"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","274","274"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","271","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","265","301"
"java.util.regex.Matcher.matches() Matcher.java","263","263"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","211","211"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","119","119"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","103","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","103","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","87","87"
"java.lang.Class.getDeclaredField(String) Class.java","71","71"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","52","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","43","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","43","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","35","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","35","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","35","12"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","35","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","35","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","24","24"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","19","0"
"java.util.HashMap.put(Object, Object) HashMap.java","15","15"
"java.lang.StringBuilder.toString() StringBuilder.java","15","15"
"java.lang.StringBuilder.append(int) StringBuilder.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","11","11"
"java.lang.Object.getClass() Object.java (native)","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.<clinit>() EEAlgorithm.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"java.util.logging.Logger.getLogger(String) Logger.java","8","8"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.<init>(GroupElement, int, BaseRepresentation$BASE) BaseRepresentation.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.getKeyGenParameters() KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notNull(Object, Object) Assert.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","7","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","3","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","3","3"
"java.lang.StringBuilder.append(String) StringBuilder.java","3","3"
