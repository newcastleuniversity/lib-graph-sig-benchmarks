"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","21928","22"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","19609","19609"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","19067","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18271","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18271","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","15000","19"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","4067","20"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","1535","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","1519","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","1519","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","1519","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","1491","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","1491","1491"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1271","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1271","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","841","19"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","677","677"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","675","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","611","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","459","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","451","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","431","20"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","430","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","426","446"
"java.lang.String.matches(String) String.java","411","411"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","353","353"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","322","322"
"java.util.regex.Pattern.compile(String) Pattern.java","275","275"
"java.util.regex.Matcher.matches() Matcher.java","255","255"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","208","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","192","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","168","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","131","131"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","107","107"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","99","0"
"java.math.BigInteger.subtract(BigInteger) BigInteger.java","99","99"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","84","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","84","0"
"java.lang.Class.getDeclaredField(String) Class.java","79","79"
"java.util.HashMap.put(Object, Object) HashMap.java","59","47"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","56","56"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","34","34"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","28","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","28","28"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","23","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","20","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","20","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","19","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","12","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","12","0"
"java.lang.String.hashCode() String.java","12","12"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","12","12"
"java.lang.Class.getInterfaces() Class.java","11","11"
"java.lang.StringBuilder.append(int) StringBuilder.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","8","0"
"java.lang.String.isEmpty() String.java","8","8"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.Assert.notNull(Object, Object) Assert.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","3","0"
