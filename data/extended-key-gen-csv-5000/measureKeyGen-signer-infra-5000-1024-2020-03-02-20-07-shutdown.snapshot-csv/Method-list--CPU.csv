"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","27523","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","23148","23148"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","19103","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18443","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18443","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","15039","16"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","7284","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","7230","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","7218","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","7218","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","7070","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","7070","7070"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","4063","8"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1107","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1107","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","683","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","647","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","523","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","460","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","451","451"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","419","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","403","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","379","16"
"java.lang.String.matches(String) String.java","343","343"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","324","324"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","309","309"
"java.util.regex.Matcher.matches() Matcher.java","304","304"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","284","284"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","264","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","256","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","246","270"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","224","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","184","184"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","152","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","150","150"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","99","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","99","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","48","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","47","47"
"java.lang.Class.getDeclaredField(String) Class.java","39","39"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","39","39"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","35","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","35","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","31","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","23","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","23","23"
"java.lang.StringBuilder.<init>() StringBuilder.java","20","20"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","16","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","16","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","16","16"
"java.util.HashMap.put(Object, Object) HashMap.java","12","12"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","11","0"
"java.lang.StringBuilder.toString() StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","7","0"
"java.lang.String.isEmpty() String.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.CRT.<clinit>() CRT.java","6","6"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","6","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","3","0"
