"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","5456","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","3669","3669"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","3623","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2883","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2883","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","2786","44"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1233","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1233","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","857","16"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","836","11"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","654","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","630","630"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","567","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","531","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","438","3"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","435","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","419","27"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","387","387"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","379","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","379","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","379","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","376","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","363","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","363","363"
"java.lang.String.matches(String) String.java","327","327"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","273","273"
"java.util.regex.Matcher.matches() Matcher.java","255","255"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","199","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","199","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","191","191"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","188","188"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","179","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","163","163"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","159","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","102","102"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","95","16"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","83","0"
"java.lang.Class.getDeclaredField(String) Class.java","64","64"
"java.util.HashMap.put(Object, Object) HashMap.java","56","36"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","39","11"
"java.lang.StringBuilder.toString() StringBuilder.java","36","36"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","31","0"
"java.lang.Object.clone() Object.java (native)","28","28"
"java.lang.Object.getClass() Object.java (native)","28","28"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","20","20"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","20","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","20","0"
"java.lang.String.hashCode() String.java","20","20"
"java.lang.reflect.Field.get(Object) Field.java","19","19"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","16","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","15","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","15","3"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","15","15"
"java.lang.StringBuilder.append(String) StringBuilder.java","14","14"
"java.lang.StringBuilder.append(int) StringBuilder.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","8","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","7","7"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","3","3"
