"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","5702","8"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","3638","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","3589","3589"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2898","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2898","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","2826","40"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1088","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1088","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","943","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","927","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","919","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","919","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","903","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","903","903"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","811","8"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","779","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","710","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","588","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","555","47"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","507","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","463","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","459","459"
"java.lang.String.matches(String) String.java","435","435"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","377","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","361","361"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","336","456"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","266","266"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","255","255"
"java.util.regex.Matcher.matches() Matcher.java","251","251"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","223","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","215","35"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","155","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","111","111"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","76","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","76","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","75","7"
"java.lang.Class.getDeclaredField(String) Class.java","63","63"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","55","55"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","43","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","39","39"
"java.util.HashMap.put(Object, Object) HashMap.java","35","31"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","24","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","22","22"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","16","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","16","16"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","16","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","15","0"
"java.lang.Object.clone() Object.java (native)","15","15"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isEnumerable(URNType) URNType.java","12","12"
"java.lang.reflect.Field.get(Object) Field.java","12","0"
"java.lang.StringBuilder.toString() StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","7"
"java.lang.StringBuilder.append(String) StringBuilder.java","4","4"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","3","3"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.verifySGeneratorOfQRN(BigInteger, BigInteger) CryptoUtilsFacade.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.verifySGeneratorOfQRN(BigInteger, BigInteger) GSUtils.java","3","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","3","3"
