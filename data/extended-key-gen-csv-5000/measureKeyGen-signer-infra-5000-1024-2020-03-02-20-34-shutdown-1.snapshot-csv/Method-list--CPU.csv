"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","24730","3"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","21476","21476"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","19032","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18296","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","18296","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","14944","55"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","4751","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","4520","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","4520","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","4520","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","4464","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","4464","4464"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","4087","12"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","918","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","918","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","522","8"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","503","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","467","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","419","419"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","392","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","390","390"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","335","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","323","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","303","11"
"java.lang.String.matches(String) String.java","291","291"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","261","261"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","259","352"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","243","243"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","219","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","219","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","219","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","219","27"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","219","0"
"java.util.regex.Matcher.matches() Matcher.java","203","203"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","175","175"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","167","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","167","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","152","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","147","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","144","11"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","123","123"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","56","0"
"java.math.BigInteger.subtract(BigInteger) BigInteger.java","55","55"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","51","0"
"java.lang.Class.getDeclaredField(String) Class.java","51","51"
"java.util.HashMap.put(Object, Object) HashMap.java","51","51"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","31","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","31","31"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","20","20"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","19","0"
"java.lang.Object.getClass() Object.java (native)","11","11"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","11","11"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","11","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","8","8"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","3","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","3","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","3","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","3","3"
