"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","155273","12"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","147362","147362"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","129767","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","128895","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","128895","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","102389","28"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","27377","27"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","24319","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","24277","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","24277","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","24277","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","23881","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","23881","23881"
"java.math.BigInteger.mod(BigInteger) BigInteger.java","4825","4825"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1146","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1146","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","735","67"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","719","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","611","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","491","491"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","415","415"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","411","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","407","15"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","399","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","391","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","343","20"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","340","340"
"java.lang.String.matches(String) String.java","319","319"
"java.util.regex.Matcher.matches() Matcher.java","315","315"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","314","314"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","311","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","311","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","275","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","260","260"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","239","275"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","168","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","168","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","143","143"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","83","12"
"java.lang.Class.getDeclaredField(String) Class.java","79","79"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","59","59"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","48","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","36","28"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","35","11"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","34","34"
"java.util.HashMap.put(Object, Object) HashMap.java","28","20"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","27","0"
"java.lang.Object.getClass() Object.java (native)","19","19"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","15","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","15","0"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","10","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","10","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","10","0"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","7","0"
"java.lang.String.hashCode() String.java","7","7"
"java.lang.StringBuilder.append(String) StringBuilder.java","7","7"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","6","6"
"java.lang.StringBuilder.toString() StringBuilder.java","3","3"
