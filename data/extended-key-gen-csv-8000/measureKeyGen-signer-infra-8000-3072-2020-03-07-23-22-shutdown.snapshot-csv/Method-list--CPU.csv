"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","1039623","4"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","977297","977297"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","644442","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","642918","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","642918","11"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","508752","116"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","394073","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","393714","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","393714","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","393714","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","388619","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","388619","388619"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","135690","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","5326","5326"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","5094","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","1384","1384"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1083","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1083","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","959","12"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","918","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","780","27"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","610","610"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","531","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","519","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","511","24"
"java.lang.String.matches(String) String.java","411","411"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","375","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","371","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","363","0"
"java.util.regex.Matcher.matches() Matcher.java","363","363"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","363","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","307","327"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","302","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","299","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","299","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","299","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","299","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","299","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","299","299"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","268","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","198","198"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","163","8"
"java.lang.Class.getDeclaredField(String) Class.java","163","163"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","95","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","91","91"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","60","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","55","55"
"java.util.HashMap.put(Object, Object) HashMap.java","51","44"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","44","44"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","31","0"
"java.lang.StringBuilder.toString() StringBuilder.java","31","31"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","18","18"
"java.lang.Object.getClass() Object.java (native)","15","15"
"java.lang.StringBuilder.append(int) StringBuilder.java","12","12"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_E() GraphEncodingParameters.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.crypto.GroupElement.<init>() GroupElement.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","12","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","12","12"
"eu.prismacloud.primitives.zkpgs.store.URNType.isEnumerable(URNType) URNType.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","11","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","7","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.getL_pt() KeyGenParameters.java","7","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.verifySGeneratorOfQRN(BigInteger, BigInteger) CryptoUtilsFacade.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.verifySGeneratorOfQRN(BigInteger, BigInteger) GSUtils.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","3","3"
