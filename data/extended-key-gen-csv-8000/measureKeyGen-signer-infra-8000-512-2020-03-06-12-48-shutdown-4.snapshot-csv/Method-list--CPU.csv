"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","8036","7"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","5920","5920"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","5606","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4713","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","4709","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","4357","16"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1410","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1410","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","1248","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","1052","7"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","991","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","886","8"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","827","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","787","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","787","787"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","778","778"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","743","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","578","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","578","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","554","23"
"java.lang.String.matches(String) String.java","486","486"
"java.util.regex.Matcher.matches() Matcher.java","383","383"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","382","382"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","357","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","279","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","279","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","271","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","254","254"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","210","305"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","191","191"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","151","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","151","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","147","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","147","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","147","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","143","143"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","123","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","103","103"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","83","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","83","0"
"java.lang.Class.getDeclaredField(String) Class.java","63","63"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","44","0"
"java.util.HashMap.put(Object, Object) HashMap.java","35","35"
"java.lang.StringBuilder.append(int) StringBuilder.java","27","27"
"java.lang.StringBuilder.append(String) StringBuilder.java","24","24"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","23","0"
"java.lang.reflect.Field.get(Object) Field.java","23","23"
"java.lang.Object.getClass() Object.java (native)","21","21"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"java.lang.StringBuilder.toString() StringBuilder.java","19","19"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","15","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","12","0"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","12","12"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","11","11"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","10","10"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_E() GraphEncodingParameters.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","7","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","4","0"
"java.lang.Class.getInterfaces() Class.java","4","4"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.getL_V() GraphEncodingParameters.java","3","3"
"java.lang.StringBuilder.<init>() StringBuilder.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","3","3"
