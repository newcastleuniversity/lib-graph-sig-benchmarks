"Call Tree","Time (ms)","Level"
"<All threads>","1920","1"
"<...> java.lang.Thread.run()","1644","2"
"<14 calls> IssuingBenchmark.java:303 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2()","944","3"
"SignerOrchestrator.java:282 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph()","424","4"
"SignerOrchestrator.java:358 eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String)","324","5"
"GSGraph.java:64 org.jgrapht.io.GraphImporter.importGraph(Graph, InputStream)","304","6"
"GraphImporter.java:44 org.jgrapht.io.GraphMLImporter.importGraph(Graph, Reader)","304","7"
"GraphMLImporter.java:215 org.jgrapht.io.GraphMLImporter.createXMLReader()","244","8"
"GraphMLImporter.java:254 <...> com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaFactory.newSchema(Source[])","184","9"
"GraphMLImporter.java:233 <...> javax.xml.validation.SchemaFactory.newInstance(String)","40","9"
"GraphMLImporter.java:259 <...> com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl.newSAXParser()","20","9"
"GraphMLImporter.java:219 <...> com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(InputSource)","60","8"
"<12 calls> AbstractSAXParser.java:509 org.jgrapht.io.GraphMLImporter$GraphMLHandler.startElement(String, String, String, Attributes)","20","9"
"GraphMLImporter.java:476 <...> java.lang.ClassLoader.loadClass(String)","20","10"
"GSGraph.java:62 eu.prismacloud.primitives.zkpgs.graph.GraphMLProvider.createImporter()","20","6"
"GraphMLProvider.java:65 <...> java.lang.ClassLoader.loadClass(String)","20","7"
"SignerOrchestrator.java:362 eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey)","60","5"
"GraphRepresentation.java:71 eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeEdges()","40","6"
"GraphRepresentation.java:127 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getRandomEdgeBase(Map)","20","7"
"ExtendedPublicKey.java:271 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getRandomEdgeBase()","20","8"
"ExtendedPublicKey.java:311 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getPrototypeEdgeBase(int)","20","9"
"ExtendedPublicKey.java:196 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","20","10"
"URNType.java:617 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","20","11"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","20","12"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","20","13"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String)","20","14"
"URN.java:309","20","15"
"GraphRepresentation.java:129 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","20","7"
"URNType.java:617 eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String)","20","8"
"URN.java:181 eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean)","20","9"
"URN.java:39 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String)","20","10"
"URNType.java:708 eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String)","20","11"
"URNType.java:720 eu.prismacloud.primitives.zkpgs.store.URNType.values()","20","12"
"URNType.java:15 java.lang.Object.clone()","20","13"
"GraphRepresentation.java:70 eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeVertices()","20","6"
"GraphRepresentation.java:87 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getRandomVertexBase(Map)","20","7"
"ExtendedPublicKey.java:250 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getRandomVertexBase()","20","8"
"ExtendedPublicKey.java:293 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.getPrototypeVertexBase(int)","20","9"
"ExtendedPublicKey.java:172 eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int)","20","10"
"URNType.java:617 eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int)","20","11"
"URNType.java:640 <...> java.lang.Class.getDeclaredField(String)","20","12"
"SignerOrchestrator.java:360 eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding)","20","5"
"GSGraph.java:86 eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeVertices(IGraphEncoding)","20","6"
"GSGraph.java:97 eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeVertex(GSVertex, IGraphEncoding)","20","7"
"GSGraph.java:112 eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.getVertexRepresentative(String)","20","8"
"GeoLocationGraphEncoding.java:187","20","9"
"SignerOrchestrator.java:358 <...> java.lang.ClassLoader.loadClass(String)","20","5"
"SignerOrchestrator.java:302 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey)","404","4"
"SignerOrchestrator.java:441 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE()","304","5"
"SignerOrchestrator.java:191 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger)","304","6"
"CryptoUtilsFacade.java:67 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeInRange(BigInteger, BigInteger)","304","7"
"GSUtils.java:186 eu.prismacloud.primitives.zkpgs.util.GSUtils.generatePrimeWithPositiveMin(BigInteger, BigInteger)","304","8"
"GSUtils.java:214 eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger)","240","9"
"GSUtils.java:715 <...> java.math.BigInteger.isProbablePrime(int)","240","10"
"GSUtils.java:212 <...> java.math.BigInteger.<init>(int, Random)","44","9"
"GSUtils.java:212","20","9"
"SignerOrchestrator.java:439 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData)","80","5"
"SignerOrchestrator.java:486 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","60","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","60","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","60","8"
"SignerOrchestrator.java:495 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","8"
"SignerOrchestrator.java:450 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","20","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","20","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","20","7"
"SignerOrchestrator.java:292 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection)","72","4"
"SignerOrchestrator.java:347 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge()","52","5"
"SignerOrchestrator.java:372 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList()","32","6"
"SignerOrchestrator.java:525 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","32","7"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","32","8"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","32","9"
"ExtendedPublicKey.java:149","32","10"
"SignerOrchestrator.java:373 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","20","6"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","20","7"
"GSUtils.java:600 <...> java.security.MessageDigest.update(byte[])","20","8"
"SignerOrchestrator.java:345 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.executeVerification(BigInteger)","20","5"
"AbstractCommitmentVerifier.java:74 eu.prismacloud.primitives.zkpgs.verifier.AbstractCommitmentVerifier.computeVerifierWitness(BigInteger)","20","6"
"AbstractCommitmentVerifier.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","9"
"SignerOrchestrator.java:307 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature)","44","4"
"SignerOrchestrator.java:321 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge()","24","5"
"SigningQProverOrchestrator.java:89 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList()","24","6"
"SigningQProverOrchestrator.java:114 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","24","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","24","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","24","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","24","10"
"SignerOrchestrator.java:319 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.executePreChallengePhase()","20","5"
"SigningQProverOrchestrator.java:76 eu.prismacloud.primitives.zkpgs.prover.SigningQCorrectnessProver.executePreChallengePhase()","20","6"
"SigningQCorrectnessProver.java:85 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","9"
"<16 calls> IssuingBenchmark.java:117 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","156","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","156","4"
"<36 calls> Unsafe.java (native) eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>()","20","5"
"NamespaceComponent.java:19 <...> java.util.regex.Pattern.compile(String)","20","6"
"<14 calls> IssuingBenchmark.java:304 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3()","140","3"
"RecipientOrchestrator.java:220 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger)","40","4"
"SigningQVerifierOrchestrator.java:139 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge()","40","5"
"SigningQVerifierOrchestrator.java:102 eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList()","40","6"
"SigningQVerifierOrchestrator.java:118 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","40","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","40","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","20","9"
"BaseRepresentation.java:102 <...> java.util.ArrayList.add(Object)","20","10"
"ExtendedPublicKey.java:149","20","9"
"RecipientOrchestrator.java:229 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection)","40","4"
"GSSignature.java:134 eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement)","40","5"
"GSSignature.java:173 eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE()","40","6"
"GSSignature.java:192 <...> java.math.BigInteger.isProbablePrime(int)","40","7"
"RecipientOrchestrator.java:207 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify()","40","4"
"GSSignatureValidator.java:103 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger)","20","5"
"GSSignatureValidator.java:45 <...> java.math.BigInteger.isProbablePrime(int)","20","6"
"GSSignatureValidator.java:108 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature()","20","5"
"GSSignatureValidator.java:112 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","20","6"
"GSSignatureValidator.java:79 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","8"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","9"
"RecipientOrchestrator.java:203 eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ()","20","4"
"GSSignatureValidator.java:86 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","5"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","6"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","7"
"<14 calls> IssuingBenchmark.java:305 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String)","136","3"
"RecipientOrchestrator.java:361 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","136","4"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","136","5"
"<14 calls> IssuingBenchmark.java:302 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1()","100","3"
"RecipientOrchestrator.java:153 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge()","80","4"
"RecipientOrchestrator.java:253 eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList()","60","5"
"RecipientOrchestrator.java:260 eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext()","40","6"
"GSContext.java:25 eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List)","40","7"
"GSContext.java:31 eu.prismacloud.primitives.zkpgs.keys.ExtendedPublicKey.addToChallengeContext(List)","40","8"
"ExtendedPublicKey.java:148 eu.prismacloud.primitives.zkpgs.BaseRepresentation.addToChallengeContext(List)","40","9"
"BaseRepresentation.java:102 <...> java.lang.String.valueOf(Object)","40","10"
"RecipientOrchestrator.java:259","20","6"
"RecipientOrchestrator.java:254 eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int)","20","5"
"CryptoUtilsFacade.java:76 eu.prismacloud.primitives.zkpgs.util.GSUtils.computeHash(List, int)","20","6"
"GSUtils.java:600 <...> java.lang.String.getBytes(Charset)","20","7"
"RecipientOrchestrator.java:145 eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger)","20","4"
"GSRecipient.java:46 eu.prismacloud.primitives.zkpgs.commitment.GSCommitment.createCommitment(BaseCollection, BigInteger, ExtendedPublicKey)","20","5"
"GSCommitment.java:122 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","6"
"QRElement.java:15 eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger)","20","7"
"QRElement.java:108 <...> java.math.BigInteger.modPow(BigInteger, BigInteger)","20","8"
"<16 calls> IssuingBenchmark.java:121 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String)","80","3"
"FilePersistenceUtil.java:23 <...> java.io.ObjectOutputStream.writeObject(Object)","80","4"
"<16 calls> IssuingBenchmark.java:107 eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.read(String)","40","3"
"FilePersistenceUtil.java:34 <...> java.io.ObjectInputStream.readObject()","40","4"
"<14 calls> IssuingBenchmark.java:301 eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round0()","20","3"
"SignerOrchestrator.java:278 eu.prismacloud.primitives.zkpgs.signer.GSSigner.sendMessage(GSMessage)","20","4"
"GSSigner.java:65 eu.prismacloud.primitives.grs.bench.MockMessageGateway.send(GSMessage)","20","5"
"<16 calls> IssuingBenchmark.java:98 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int)","20","3"
"KeyGenParameters.java:139 eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int)","20","4"
"KeyGenParameters.java:116","20","5"
"<16 calls> IssuingBenchmark.java:100 eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int)","8","3"
"GraphEncodingParameters.java:81 <...> java.math.BigInteger.nextProbablePrime()","8","4"
"<...> org.openjdk.jmh.runner.ForkedMain.main(String[])","276","2"
