"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","4703","15"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","3031","3031"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","2920","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2348","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","2348","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","2221","51"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1075","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1075","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","698","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","686","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","671","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","591","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","591","591"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","583","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","583","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","583","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","523","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","506","506"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","451","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","417","417"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","389","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","343","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","343","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","311","7"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","297","349"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","277","277"
"java.lang.String.matches(String) String.java","267","267"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","195","195"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","143","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","143","0"
"java.util.regex.Matcher.matches() Matcher.java","127","127"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","119","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","107","0"
"java.lang.Class.getDeclaredField(String) Class.java","107","107"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","99","99"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","75","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","75","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","67","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","67","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","67","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","67","67"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","35","35"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","35","35"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","31","12"
"java.util.HashMap.put(Object, Object) HashMap.java","31","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","24","12"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","24","12"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","23","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","23","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","19","19"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","16","16"
"java.lang.StringBuilder.toString() StringBuilder.java","15","15"
"java.lang.Class.getInterfaces() Class.java","12","12"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","12","12"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","11","0"
"java.lang.String.hashCode() String.java","11","11"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","7","0"
"java.math.BigInteger.<clinit>() BigInteger.java","7","7"
"java.lang.reflect.Field.get(Object) Field.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","4","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","3","3"
"java.lang.StringBuilder.<init>() StringBuilder.java","3","3"
