"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","119886","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","114778","114778"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","104452","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","103820","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","103820","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","82433","8"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","22018","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","14526","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","14459","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","14459","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","14459","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","14239","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","14239","14239"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","876","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","876","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","543","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","512","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","419","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","419","419"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","346","346"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","332","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","323","323"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","315","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","303","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","275","11"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","261","261"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","255","255"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","249","273"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","219","0"
"java.lang.String.matches(String) String.java","215","215"
"java.util.regex.Matcher.matches() Matcher.java","185","185"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","185","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","177","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","165","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","71","71"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","51","0"
"java.lang.Class.getDeclaredField(String) Class.java","47","47"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","36","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","36","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","36","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","36","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","36","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","35","35"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","32","32"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","30","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","30","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","27","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","27","19"
"java.util.HashMap.put(Object, Object) HashMap.java","23","23"
"java.lang.StringBuilder.toString() StringBuilder.java","19","19"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","12","12"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","11","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","11","7"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.<init>(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","11","0"
"eu.prismacloud.primitives.zkpgs.parameters.KeyGenParameters.createKeyGenParameters(int, int, int, int, int, int, int, int, int, int, int, int) KeyGenParameters.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.NumberConstants.<clinit>() NumberConstants.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","10","0"
"eu.prismacloud.primitives.zkpgs.util.Assert.notEmpty(String, String) Assert.java","7","7"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URNType$1.<clinit>() URNType.java","7","7"
