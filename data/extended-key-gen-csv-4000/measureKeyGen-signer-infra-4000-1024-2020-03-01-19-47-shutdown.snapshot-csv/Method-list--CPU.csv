"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","19674","16"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","16676","16676"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","15325","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","14477","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","14477","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","12017","12"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","3315","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","3307","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","2892","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","2892","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","2892","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","2848","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","2848","2848"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1001","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1001","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","771","8"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","711","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","550","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","527","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","527","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","519","24"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","450","0"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","439","439"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","415","415"
"java.lang.String.matches(String) String.java","411","411"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","399","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","399","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","382","382"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","379","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","379","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","360","360"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","335","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","293","349"
"java.util.regex.Matcher.matches() Matcher.java","251","251"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","227","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","227","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","199","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","147","147"
"java.math.BigInteger.add(BigInteger) BigInteger.java","112","112"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","92","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","90","90"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","80","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","79","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","67","0"
"java.lang.Class.getDeclaredField(String) Class.java","67","67"
"java.lang.StringBuilder.append(String) StringBuilder.java","55","55"
"java.lang.StringBuilder.toString() StringBuilder.java","39","39"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","27","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","25","25"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","15","0"
"org.openjdk.jmh.runner.ForkedMain.<clinit>() ForkedMain.java","15","15"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFactory.getInstance(String) CryptoUtilsFactory.java","12","12"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.<init>(GroupElement, int, BaseRepresentation$BASE) BaseRepresentation.java","11","11"
"java.lang.Object.getClass() Object.java (native)","8","8"
"java.util.HashMap.size() HashMap.java","8","8"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","7","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","7","7"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","7","0"
"java.util.HashMap.put(Object, Object) HashMap.java","4","4"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"java.math.BigInteger.divide(BigInteger) BigInteger.java","3","3"
