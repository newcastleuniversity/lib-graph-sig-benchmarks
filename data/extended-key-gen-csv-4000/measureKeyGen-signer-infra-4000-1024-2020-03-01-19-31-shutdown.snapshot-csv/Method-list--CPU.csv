"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","19809","0"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","17108","17108"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","15504","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","14904","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","14904","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","12197","36"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","3339","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","3307","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","3247","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","3247","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","3247","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","3195","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","3195","3195"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","961","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","961","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","590","27"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","563","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","411","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","382","382"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","379","379"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","370","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","359","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","299","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","283","3"
"java.lang.String.matches(String) String.java","279","279"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","257","257"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","232","244"
"java.util.regex.Pattern.compile(String) Pattern.java","227","227"
"java.util.regex.Matcher.matches() Matcher.java","195","195"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","187","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","187","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","175","175"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","151","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","113","113"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","103","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","103","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","91","91"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","91","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","91","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","75","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","75","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","75","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getClass(URNType) URNType.java","59","47"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","43","0"
"java.lang.Class.getDeclaredField(String) Class.java","43","43"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","35","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","31","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","27","0"
"java.util.HashMap.put(Object, Object) HashMap.java","27","15"
"java.lang.Object.getClass() Object.java (native)","20","20"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","16","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","15","0"
"eu.prismacloud.primitives.zkpgs.store.URN.hashCode() URN.java","11","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.hashCode() NamespaceComponent.java","11","0"
"java.lang.Enum.ordinal() Enum.java","11","11"
"java.lang.String.hashCode() String.java","11","11"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","11","11"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.crypto.SafePrime.<clinit>() SafePrime.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.GroupElement.<init>() GroupElement.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.<init>(Group, BigInteger) QRElement.java","8","0"
"eu.prismacloud.primitives.zkpgs.BaseRepresentation.<init>(GroupElement, int, BaseRepresentation$BASE) BaseRepresentation.java","7","7"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","7","0"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","4","4"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.<init>(SignerKeyPair, GraphEncodingParameters, KeyGenParameters) ExtendedKeyPair.java","3","0"
