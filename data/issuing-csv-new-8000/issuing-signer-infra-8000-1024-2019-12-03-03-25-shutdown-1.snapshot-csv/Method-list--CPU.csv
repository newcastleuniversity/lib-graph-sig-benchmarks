"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","23051","3586"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","13574","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","11968","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","9501","9501"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","3618","3618"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","2595","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","2413","68"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","2151","2151"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","1955","1955"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1471","1471"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","1285","1285"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","1106","1106"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","864","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","843","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","835","12"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","835","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","821","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","803","20"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","657","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","572","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","560","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","553","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","553","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","523","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","523","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","509","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","491","491"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","448","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","441","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","425","32"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","419","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","351","351"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","315","315"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","206","362"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","176","176"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","161","161"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","83","83"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","80","80"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE() SignerOrchestrator.java","67","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","67","67"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","38","38"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","24","0"
"eu.prismacloud.primitives.zkpgs.util.BaseIteratorImpl.iterator() BaseIteratorImpl.java","19","19"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init() RecipientOrchestrator.java","17","0"
"java.math.BigInteger.add(BigInteger) BigInteger.java","16","16"
"java.util.ArrayList$Itr.next() ArrayList.java","15","15"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","15","15"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","15","15"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePostChallengePhase(BigInteger) AbstractCommitmentProver.java","11","11"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","8","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.checkE(BigInteger) GSSignatureValidator.java","8","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.getVPrimePrime() SignerOrchestrator.java","7","7"
"java.lang.Integer.<init>(int) Integer.java","4","4"
"java.math.BigInteger.modInverse(BigInteger) BigInteger.java","3","3"
