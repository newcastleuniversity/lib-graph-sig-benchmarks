"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","23091","3567"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.round2() SignerOrchestrator.java","13437","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.encodeSignerGraph() SignerOrchestrator.java","11892","0"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.encodeGraph(GSGraph, ExtendedPublicKey) GraphRepresentation.java","9423","9423"
"eu.prismacloud.primitives.zkpgs.util.FilePersistenceUtil.write(Object, String) FilePersistenceUtil.java","3815","3815"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.serializeFinalSignature(String) RecipientOrchestrator.java","2759","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round3() RecipientOrchestrator.java","2393","15"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.createGraph(String) GSGraph.java","2156","2156"
"eu.prismacloud.primitives.zkpgs.context.GSContext.addToChallengeContext(List) GSContext.java","2035","2035"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1502","1502"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","1485","1485"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1413","1413"
"eu.prismacloud.primitives.zkpgs.context.GSContext.computeChallengeContext() GSContext.java","1137","1137"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.round1() RecipientOrchestrator.java","915","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.computeChallenge() RecipientOrchestrator.java","865","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(ExtendedPublicKey, BaseCollection) GSSignature.java","807","20"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.computeQ() GSSignatureValidator.java","791","11"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verify() GSSignatureValidator.java","791","0"
"eu.prismacloud.primitives.zkpgs.signature.GSSignatureValidator.verifySignature() GSSignatureValidator.java","791","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.populateChallengeList() RecipientOrchestrator.java","721","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.prepareProvingSigningQ(GSSignature) SignerOrchestrator.java","563","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.computeChallenge() SigningQProverOrchestrator.java","563","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.computeChallenge() SigningQVerifierOrchestrator.java","557","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.executeVerification(BigInteger) SigningQVerifierOrchestrator.java","557","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeChallenge() SignerOrchestrator.java","524","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.verifyRecipientCommitment(GroupElement, BaseCollection) SignerOrchestrator.java","524","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeHash(List, int) CryptoUtilsFacade.java","475","475"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQProverOrchestrator.populateChallengeList() SigningQProverOrchestrator.java","451","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SigningQVerifierOrchestrator.populateChallengeList() SigningQVerifierOrchestrator.java","445","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.createPartialSignature(SignerOrchestrator$SignatureData, ExtendedPublicKey) SignerOrchestrator.java","445","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.populateChallengeList() SignerOrchestrator.java","416","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator.computeQ(SignerOrchestrator$SignatureData) SignerOrchestrator.java","413","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","402","402"
"eu.prismacloud.primitives.zkpgs.graph.GSGraph.encodeGraph(IGraphEncoding) GSGraph.java","312","312"
"eu.prismacloud.primitives.zkpgs.store.ProofStore.store(String, Object) ProofStore.java","203","203"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","127","127"
"java.util.HashMap.get(Object) HashMap.java","71","71"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.multiply(GroupElement) QRElement.java","55","55"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.verify(SignerPublicKey, GroupElement) GSSignature.java","35","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createBaseURN(BaseRepresentation) RecipientOrchestrator.java","24","8"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","21","21"
"eu.prismacloud.primitives.zkpgs.recipient.GSRecipient.commit(BaseCollection, BigInteger) GSRecipient.java","19","19"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.init() RecipientOrchestrator.java","17","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.createProofSignature() RecipientOrchestrator.java","16","0"
"java.lang.StringBuilder.append(int) StringBuilder.java","15","15"
"eu.prismacloud.primitives.zkpgs.prover.AbstractCommitmentProver.executePreChallengePhase() AbstractCommitmentProver.java","15","15"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","12","12"
"eu.prismacloud.primitives.zkpgs.graph.GraphRepresentation.getEncodedBaseCollection() GraphRepresentation.java","12","12"
"java.math.BigInteger.multiply(BigInteger) BigInteger.java","11","11"
"org.openjdk.jmh.runner.ForkedMain.<clinit>() ForkedMain.java","10","10"
"eu.prismacloud.primitives.zkpgs.orchestrator.RecipientOrchestrator.generateRecipientMSK() RecipientOrchestrator.java","10","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","10","10"
"eu.prismacloud.primitives.zkpgs.signature.GSSignature.hasValidE() GSSignature.java","8","0"
"eu.prismacloud.primitives.zkpgs.orchestrator.SignerOrchestrator$SignatureData.computeRandomPrimeE() SignerOrchestrator.java","4","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computePrimeInRange(BigInteger, BigInteger) CryptoUtilsFacade.java","4","4"
"java.math.BigInteger.add(BigInteger) BigInteger.java","4","4"
