"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","3453","15"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","1966","1966"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","1807","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","1331","19"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1327","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","1327","7"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","974","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","974","0"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","635","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","591","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","591","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","591","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","591","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","591","591"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","590","47"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","483","483"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","475","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","415","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","402","402"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","399","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","375","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","286","294"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","263","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","263","0"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","260","260"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","227","16"
"java.lang.String.matches(String) String.java","199","199"
"java.util.regex.Matcher.matches() Matcher.java","152","152"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","131","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","131","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","115","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","115","115"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","95","95"
"java.lang.Class.getDeclaredField(String) Class.java","83","83"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","55","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","55","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","47","0"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","36","16"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","31","31"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","28","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","28","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","28","28"
"eu.prismacloud.primitives.zkpgs.store.URNType.isURNGoverner(Class) URNType.java","19","0"
"java.lang.Class.getInterfaces() Class.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","19","19"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","19","19"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","16","0"
"java.util.HashMap.put(Object, Object) HashMap.java","15","15"
"java.lang.StringBuilder.toString() StringBuilder.java","8","8"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.<init>() JsonIsoCountries.java","7","0"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.parseEncodingFile() JsonIsoCountries.java","7","0"
"java.net.URLClassLoader.getResourceAsStream(String) URLClassLoader.java","7","7"
"java.lang.StringBuilder.append(String) StringBuilder.java","4","4"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","4","4"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.createGenerator() QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.createElementOfZNS(BigInteger) CryptoUtilsFacade.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createElementOfZNS(BigInteger) GSUtils.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isElementOfZNS(BigInteger, BigInteger) GSUtils.java","3","0"
"java.math.BigInteger.gcd(BigInteger) BigInteger.java","3","3"
