"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","31450","19"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","26996","26996"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","22828","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","22076","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","22076","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","17971","12"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","7469","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","7214","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","7214","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","7214","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","7086","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","7086","7086"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","4856","7"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1113","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1113","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","750","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","713","16"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","595","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","558","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","558","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","522","36"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","514","514"
"java.lang.String.matches(String) String.java","455","435"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","400","0"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","386","386"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","336","336"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","333","437"
"java.util.regex.Pattern.compile(String) Pattern.java","323","323"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","303","303"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","292","292"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","232","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","232","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","228","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","228","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","228","0"
"java.util.regex.Matcher.matches() Matcher.java","219","219"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","179","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","179","0"
"java.math.BigInteger.multiply(BigInteger) BigInteger.java","147","147"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","140","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","135","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","132","0"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","107","107"
"java.lang.Class.getDeclaredField(String) Class.java","92","92"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","47","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","39","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","39","39"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","36","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(BigInteger, BigInteger) GSUtils.java","24","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","19","19"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","19","0"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","13","13"
"java.lang.String.length() String.java","11","11"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.<clinit>() NamespaceComponent.java","11","0"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","8","8"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.modPow(BigInteger) QRElementPQ.java","7","0"
"java.lang.reflect.Field.get(Object) Field.java","4","4"
"java.util.regex.Pattern.<clinit>() Pattern.java","3","3"
"eu.prismacloud.primitives.zkpgs.util.crypto.EEAlgorithm.computeEEAlgorithm(BigInteger, BigInteger) EEAlgorithm.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.<init>(BigInteger, BigInteger) QRGroupPQ.java","3","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.computeEEA(BigInteger, BigInteger) QRGroupPQ.java","3","0"
