"Method","Time (ms)","Own Time (ms)"
"java.lang.Thread.run() Thread.java","30222","7"
"java.math.BigInteger.modPow(BigInteger, BigInteger) BigInteger.java","25983","25983"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateBases() ExtendedKeyPair.java","22735","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","21787","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElement.modPow(BigInteger) QRElement.java","21787","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateEdgeBases(GroupElement) ExtendedKeyPair.java","17931","16"
"eu.prismacloud.primitives.zkpgs.keys.SignerKeyPair.keyGen(KeyGenParameters) SignerKeyPair.java","6336","0"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeSpecialRSAModulus(KeyGenParameters) CryptoUtilsFacade.java","6025","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateSpecialRSAModulus() GSUtils.java","6025","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomSafePrime(KeyGenParameters) GSUtils.java","6025","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrime(int) GSUtils.java","5893","0"
"java.math.BigInteger.probablePrime(int, Random) BigInteger.java","5893","5893"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.generateVertexBases(GroupElement) ExtendedKeyPair.java","4803","16"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.setupEncoding() GeoLocationGraphEncoding.java","1118","0"
"eu.prismacloud.primitives.zkpgs.keys.ExtendedKeyPair.setupEncoding() ExtendedKeyPair.java","1118","0"
"eu.prismacloud.primitives.zkpgs.store.URN.createZkpgsURN(String) URN.java","1070","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURN(URNType, Class, int) URNType.java","783","0"
"eu.prismacloud.primitives.zkpgs.store.URN.<init>(NamespaceComponent, NamespaceComponent, boolean) URN.java","746","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNType(String) URNType.java","738","0"
"eu.prismacloud.primitives.zkpgs.encoding.GeoLocationGraphEncoding.generateVertexRepresentatives() GeoLocationGraphEncoding.java","722","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.parseURNSuffix(String) URNType.java","698","39"
"java.lang.String.matches(String) String.java","618","610"
"eu.prismacloud.primitives.zkpgs.parameters.JsonIsoCountries.getCountryMap() JsonIsoCountries.java","396","0"
"java.math.BigInteger.isProbablePrime(int) BigInteger.java","395","395"
"java.math.BigInteger.nextProbablePrime() BigInteger.java","379","379"
"org.openjdk.jmh.runner.ForkedMain.main(String[]) ForkedMain.java","366","366"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.fromString(String, NamespaceComponent$Type) NamespaceComponent.java","324","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validate(String, NamespaceComponent$Type) NamespaceComponent.java","324","0"
"java.util.regex.Matcher.matches() Matcher.java","308","308"
"org.eclipse.yasson.internal.JsonBinding.fromJson(InputStream, Type) JsonBinding.java","284","284"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.commitmentGroupSetup(KeyGenParameters) CryptoUtilsFacade.java","275","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateCommitmentGroup() GSUtils.java","275","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.computeCommitmentGroupModulus(BigInteger) GSUtils.java","263","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomPrimeWithFactors(BigInteger) GSUtils.java","263","0"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNSS(String) NamespaceComponent.java","260","0"
"java.lang.ClassLoader.loadClass(String) ClassLoader.java","238","405"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.generateRandomNumberWithFactors(BigInteger) GSUtils.java","215","11"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.isPrime(BigInteger) GSUtils.java","191","0"
"java.math.BigInteger.<init>(int, Random) BigInteger.java","183","183"
"javax.json.bind.JsonbBuilder.create() JsonbBuilder.java","111","111"
"eu.prismacloud.primitives.zkpgs.util.CryptoUtilsFacade.computeRandomNumber(int) CryptoUtilsFacade.java","92","0"
"eu.prismacloud.primitives.zkpgs.util.GSUtils.createRandomNumber(int) GSUtils.java","92","0"
"java.util.regex.Pattern.matcher(CharSequence) Pattern.java","88","80"
"eu.prismacloud.primitives.zkpgs.store.URNType.buildURNComponent(URNType, Class, int) URNType.java","71","0"
"java.lang.Class.getDeclaredField(String) Class.java","71","71"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.validateNID(String) NamespaceComponent.java","63","7"
"java.util.HashMap.put(Object, Object) HashMap.java","39","39"
"eu.prismacloud.primitives.zkpgs.store.URN.parseSuffix(String) URN.java","39","0"
"eu.prismacloud.primitives.zkpgs.store.URNType.getSuffix(URNType) URNType.java","32","32"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRElementPQ.publicClone() QRElementPQ.java","27","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroup.<init>(BigInteger) QRGroup.java","27","27"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupN.<init>(BigInteger) QRGroupN.java","27","0"
"eu.prismacloud.primitives.zkpgs.util.crypto.QRGroupPQ.publicClone() QRGroupPQ.java","27","0"
"eu.prismacloud.primitives.zkpgs.parameters.GraphEncodingParameters.<init>(int, int, int, int, int) GraphEncodingParameters.java","23","0"
"java.util.StringTokenizer.nextToken() StringTokenizer.java","23","23"
"java.lang.reflect.Field.get(Object) Field.java","11","11"
"java.lang.StringBuilder.toString() StringBuilder.java","11","11"
"eu.prismacloud.primitives.zkpgs.store.URNType.values() URNType.java","11","0"
"java.lang.Object.clone() Object.java (native)","11","11"
"sun.launcher.LauncherHelper.checkAndLoadMain(boolean, int, String) LauncherHelper.java","9","9"
"java.util.StringTokenizer.<init>(String, String) StringTokenizer.java","8","8"
"eu.prismacloud.primitives.zkpgs.util.NamespaceComponent.getContent() NamespaceComponent.java","7","7"
"java.lang.StringBuilder.append(int) StringBuilder.java","7","7"
"java.util.StringTokenizer.hasMoreTokens() StringTokenizer.java","7","7"
"java.lang.String.equals(Object) String.java","4","4"
"org.openjdk.jmh.runner.ForkedMain.<clinit>() ForkedMain.java","3","3"
